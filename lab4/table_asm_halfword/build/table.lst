


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- table.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P04 Ein- und Ausgabe von Tabellenwerten
   13 00000000         ; --
   14 00000000         ; -- $Id: table.s 800 2014-10-06 13:19:25Z ruan $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         ; ------------------------------------------------------
                       ------------
   20 00000000         ; -- Symbolic Literals
   21 00000000         ; ------------------------------------------------------
                       ------------
   22 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   23 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   24 00000000 60000203 
                       ADDR_DIP_SWITCH_31_24
                               EQU              0x60000203
   25 00000000 60000100 
                       ADDR_LED_7_0
                               EQU              0x60000100
   26 00000000 60000101 
                       ADDR_LED_15_8
                               EQU              0x60000101
   27 00000000 60000102 
                       ADDR_LED_23_16
                               EQU              0x60000102
   28 00000000 60000103 
                       ADDR_LED_31_24
                               EQU              0x60000103
   29 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   30 00000000         
   31 00000000 00000001 
                       BITMASK_KEY_T0



ARM Macro Assembler    Page 2 


                               EQU              0x01
   32 00000000 0000000F 
                       BITMASK_LOWER_NIBBLE
                               EQU              0x0F
   33 00000000         
   34 00000000         ; For 7seg
   35 00000000 60000114 
                       ADDR_SEG7_BIN
                               EQU              0x60000114
   36 00000000 60000115 
                       ADDR_SEG7_BIN_2
                               EQU              0x60000115
   37 00000000         
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; -- Variables
   40 00000000         ; ------------------------------------------------------
                       ------------
   41 00000000                 AREA             MyAsmVar, DATA, READWRITE
   42 00000000         ; STUDENTS: To be programmed
   43 00000000         
   44 00000000         ; Allocate memory (32 byte)
   45 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    byte_array
                               SPACE            32
   46 00000020         
   47 00000020         ; END: To be programmed
   48 00000020                 ALIGN
   49 00000020         
   50 00000020         ; ------------------------------------------------------
                       ------------
   51 00000020         ; -- myCode
   52 00000020         ; ------------------------------------------------------
                       ------------
   53 00000020                 AREA             myCode, CODE, READONLY
   54 00000000         
   55 00000000         main    PROC
   56 00000000                 EXPORT           main
   57 00000000         
   58 00000000         readInput
   59 00000000 F000 F822       BL               waitForKey  ; wait for key to b
                                                            e pressed and relea
                                                            sed
   60 00000004         ; STUDENTS: To be programmed
   61 00000004         
   62 00000004         ; read switch 0-7 and 8-15 and store in r0,r1
   63 00000004 4816            LDR              R0, =ADDR_DIP_SWITCH_7_0
   64 00000006 6800            LDR              R0, [R0]
   65 00000008 4916            LDR              R1, =ADDR_DIP_SWITCH_15_8
   66 0000000A 6809            LDR              R1, [R1]



ARM Macro Assembler    Page 3 


   67 0000000C         
   68 0000000C         ; apply mask to switch 8-15 
   69 0000000C 4A16            LDR              R2, =BITMASK_LOWER_NIBBLE
   70 0000000E 4011            ANDS             R1, R2
   71 00000010         
   72 00000010         ; load led 0-7 addr and write switch value to led
   73 00000010 4E16            LDR              R6, =ADDR_LED_7_0
   74 00000012 7030            STRB             R0, [R6]
   75 00000014         
   76 00000014         ; load led 8-15 and write masked switch value to led
   77 00000014 4F16            LDR              R7, =ADDR_LED_15_8
   78 00000016 7039            STRB             R1, [R7]    ; save SWITCH 8-11 
                                                            to LED 8-15
   79 00000018         
   80 00000018         ; load addr of our byte array
   81 00000018 4B16            LDR              R3, =byte_array
   82 0000001A         
   83 0000001A         ; copy value and store it correctly
   84 0000001A 460C            MOV              R4, R1
   85 0000001C 0064            LSLS             R4, R4, #1
   86 0000001E 5518            STRB             R0, [R3, R4] ;store it in the a
                                                            rray
   87 00000020 3401            ADDS             R4, #1
   88 00000022 5518            STRB             R0, [R3, R4]
   89 00000024         
   90 00000024         
   91 00000024         ; load addr from dip switch 24-31 and display on led 24-
                       31
   92 00000024 4C14            LDR              R4, =ADDR_DIP_SWITCH_31_24 ;
   93 00000026 6824            LDR              R4, [R4]    ;
   94 00000028 4014            ANDS             R4, R4, R2  ;apply mask to R4
   95 0000002A 4814            LDR              R0, =ADDR_LED_31_24 
                                                            ;write value to led
                                                            
   96 0000002C 7004            STRB             R4, [R0]
   97 0000002E         
   98 0000002E         
   99 0000002E         ; write data to 7 seg 
  100 0000002E 0064            LSLS             R4, R4, #1
  101 00000030 591D            LDR              R5, [R3, R4]
  102 00000032 4E13            LDR              R6, =ADDR_SEG7_BIN
  103 00000034 8035            STRH             R5, [R6]
  104 00000036 4E13            LDR              R6, =ADDR_SEG7_BIN_2
  105 00000038 0864            LSRS             R4, R4, #1
  106 0000003A 8034            STRH             R4, [R6]
  107 0000003C 0064            LSLS             R4, R4, #1
  108 0000003E         
  109 0000003E 4812            LDR              R0, =ADDR_LED_23_16
  110 00000040 58E1            LDR              R1, [R4, R3]
  111 00000042 7001            STRB             R1, [R0]
  112 00000044         
  113 00000044         ; END: To be programmed
  114 00000044 E7DC            B                readInput
  115 00000046 00 00           ALIGN
  116 00000048         
  117 00000048         ; ------------------------------------------------------
                       ------------
  118 00000048         ; Subroutines
  119 00000048         ; ------------------------------------------------------



ARM Macro Assembler    Page 4 


                       ------------
  120 00000048         
  121 00000048         ; wait for key to be pressed and released
  122 00000048         waitForKey
  123 00000048 B407            PUSH             {R0, R1, R2}
  124 0000004A 4910            LDR              R1, =ADDR_BUTTONS ; laod base a
                                                            ddress of keys
  125 0000004C 4A10            LDR              R2, =BITMASK_KEY_T0 
                                                            ; load key mask T0
  126 0000004E         
  127 0000004E         waitForPress
  128 0000004E 7808            LDRB             R0, [R1]    ; load key values
  129 00000050 4210            TST              R0, R2      ; check, if key T0 
                                                            is pressed
  130 00000052 D0FC            BEQ              waitForPress
  131 00000054         
  132 00000054         waitForRelease
  133 00000054 7808            LDRB             R0, [R1]    ; load key values
  134 00000056 4210            TST              R0, R2      ; check, if key T0 
                                                            is released
  135 00000058 D1FC            BNE              waitForRelease
  136 0000005A         
  137 0000005A BC07            POP              {R0, R1, R2}
  138 0000005C 4770            BX               LR
  139 0000005E 00 00           ALIGN
  140 00000060         
  141 00000060         ; ------------------------------------------------------
                       ------------
  142 00000060         ; End of code
  143 00000060         ; ------------------------------------------------------
                       ------------
  144 00000060                 ENDP
  145 00000060                 END
              60000200 
              60000201 
              0000000F 
              60000100 
              60000101 
              00000000 
              60000203 
              60000103 
              60000114 
              60000115 
              60000102 
              60000210 
              00000001 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\table.d -o.\build\table.o -I.\RTE\_Target_1 -IC:\Users\diego\AppData\Local\
Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\diego\AppData\Loca
l\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\diego\AppData
\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --predef
ine="_RTE_ SETA 1" --list=.\build\table.lst app\table.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyAsmVar 00000000

Symbol: MyAsmVar
   Definitions
      At line 41 in file app\table.s
   Uses
      None
Comment: MyAsmVar unused
byte_array 00000000

Symbol: byte_array
   Definitions
      At line 45 in file app\table.s
   Uses
      At line 81 in file app\table.s
Comment: byte_array used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

main 00000000

Symbol: main
   Definitions
      At line 55 in file app\table.s
   Uses
      At line 56 in file app\table.s
Comment: main used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 53 in file app\table.s
   Uses
      None
Comment: myCode unused
readInput 00000000

Symbol: readInput
   Definitions
      At line 58 in file app\table.s
   Uses
      At line 114 in file app\table.s
Comment: readInput used once
waitForKey 00000048

Symbol: waitForKey
   Definitions
      At line 122 in file app\table.s
   Uses
      At line 59 in file app\table.s
Comment: waitForKey used once
waitForPress 0000004E

Symbol: waitForPress
   Definitions
      At line 127 in file app\table.s
   Uses
      At line 130 in file app\table.s
Comment: waitForPress used once
waitForRelease 00000054

Symbol: waitForRelease
   Definitions
      At line 132 in file app\table.s
   Uses
      At line 135 in file app\table.s
Comment: waitForRelease used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 29 in file app\table.s
   Uses
      At line 124 in file app\table.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 23 in file app\table.s
   Uses
      At line 65 in file app\table.s
Comment: ADDR_DIP_SWITCH_15_8 used once
ADDR_DIP_SWITCH_31_24 60000203

Symbol: ADDR_DIP_SWITCH_31_24
   Definitions
      At line 24 in file app\table.s
   Uses
      At line 92 in file app\table.s
Comment: ADDR_DIP_SWITCH_31_24 used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 22 in file app\table.s
   Uses
      At line 63 in file app\table.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LED_15_8 60000101

Symbol: ADDR_LED_15_8
   Definitions
      At line 26 in file app\table.s
   Uses
      At line 77 in file app\table.s
Comment: ADDR_LED_15_8 used once
ADDR_LED_23_16 60000102

Symbol: ADDR_LED_23_16
   Definitions
      At line 27 in file app\table.s
   Uses
      At line 109 in file app\table.s
Comment: ADDR_LED_23_16 used once
ADDR_LED_31_24 60000103

Symbol: ADDR_LED_31_24
   Definitions
      At line 28 in file app\table.s
   Uses
      At line 95 in file app\table.s
Comment: ADDR_LED_31_24 used once
ADDR_LED_7_0 60000100

Symbol: ADDR_LED_7_0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file app\table.s
   Uses
      At line 73 in file app\table.s
Comment: ADDR_LED_7_0 used once
ADDR_SEG7_BIN 60000114

Symbol: ADDR_SEG7_BIN
   Definitions
      At line 35 in file app\table.s
   Uses
      At line 102 in file app\table.s
Comment: ADDR_SEG7_BIN used once
ADDR_SEG7_BIN_2 60000115

Symbol: ADDR_SEG7_BIN_2
   Definitions
      At line 36 in file app\table.s
   Uses
      At line 104 in file app\table.s
Comment: ADDR_SEG7_BIN_2 used once
BITMASK_KEY_T0 00000001

Symbol: BITMASK_KEY_T0
   Definitions
      At line 31 in file app\table.s
   Uses
      At line 125 in file app\table.s
Comment: BITMASK_KEY_T0 used once
BITMASK_LOWER_NIBBLE 0000000F

Symbol: BITMASK_LOWER_NIBBLE
   Definitions
      At line 32 in file app\table.s
   Uses
      At line 69 in file app\table.s
Comment: BITMASK_LOWER_NIBBLE used once
12 symbols
355 symbols in table
