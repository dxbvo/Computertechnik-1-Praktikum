


ARM Macro Assembler    Page 1 


    1 00000000         ;* -----------------------------------------------------
                       -------------
    2 00000000         ;* --  _____       ______  _____                        
                                   -
    3 00000000         ;* -- |_   _|     |  ____|/ ____|                       
                                   -
    4 00000000         ;* --   | |  _ __ | |__  | (___    Institute of Embedded
                        Systems    -
    5 00000000         ;* --   | | | '_ \|  __|  \___ \   Zurich University of 
                                   -
    6 00000000         ;* --  _| |_| | | | |____ ____) |  Applied Sciences     
                                   -
    7 00000000         ;* -- |_____|_| |_|______|_____/   8401 Winterthur, Swit
                       zerland     -
    8 00000000         ;* -----------------------------------------------------
                       -------------
    9 00000000         ;* --
   10 00000000         ;* -- Project     : CT1 - Lab 7
   11 00000000         ;* -- Description : Control structures
   12 00000000         ;* -- 
   13 00000000         ;* -- $Id: main.s 3748 2016-10-31 13:26:44Z kesr $
   14 00000000         ;* -----------------------------------------------------
                       -------------
   15 00000000         
   16 00000000         
   17 00000000         ; ------------------------------------------------------
                       -------------
   18 00000000         ; -- Constants
   19 00000000         ; ------------------------------------------------------
                       -------------
   20 00000000         
   21 00000000                 AREA             myCode, CODE, READONLY
   22 00000000         
   23 00000000                 THUMB
   24 00000000         
   25 00000000 60000100 
                       ADDR_LED_15_0
                               EQU              0x60000100
   26 00000000 60000102 
                       ADDR_LED_31_16
                               EQU              0x60000102
   27 00000000 60000114 
                       ADDR_7_SEG_BIN_DS1_0
                               EQU              0x60000114
   28 00000000 60000200 
                       ADDR_DIP_SWITCH_15_0
                               EQU              0x60000200
   29 00000000 60000211 
                       ADDR_HEX_SWITCH
                               EQU              0x60000211
   30 00000000         
   31 00000000 000000FF 
                       op1_mask
                               EQU              0x000000FF
   32 00000000 0000000F 
                       rot_mask
                               EQU              0x0000000F
   33 00000000         
   34 00000000 0000000B 



ARM Macro Assembler    Page 2 


                       NR_CASES
                               EQU              0xB
   35 00000000         
   36 00000000         jump_table                           ; ordered table con
                                                            taining the labels 
                                                            of all cases
   37 00000000         ; STUDENTS: To be programmed 
   38 00000000         
   39 00000000 00000000        DCD              case_dark
   40 00000004 00000000        DCD              case_add
   41 00000008 00000000        DCD              case_sub
   42 0000000C 00000000        DCD              case_mul
   43 00000010 00000000        DCD              case_and
   44 00000014 00000000        DCD              case_or
   45 00000018 00000000        DCD              case_xor
   46 0000001C 00000000        DCD              case_not
   47 00000020 00000000        DCD              case_nand
   48 00000024 00000000        DCD              case_nor
   49 00000028 00000000        DCD              case_xnor
   50 0000002C         
   51 0000002C         
   52 0000002C         ; END: To be programmed
   53 0000002C         
   54 0000002C         
   55 0000002C         ; ------------------------------------------------------
                       -------------
   56 0000002C         ; -- Main
   57 0000002C         ; ------------------------------------------------------
                       -------------   
   58 0000002C         
   59 0000002C         main    PROC
   60 0000002C                 EXPORT           main
   61 0000002C         
   62 0000002C         read_dipsw                           ; Read operands int
                                                            o R0 and R1 and dis
                                                            play on LEDs
   63 0000002C         ; STUDENTS: To be programmed
   64 0000002C 4A18            LDR              R2, =ADDR_DIP_SWITCH_15_0
   65 0000002E 6812            LDR              R2, [R2]
   66 00000030 4B18            LDR              R3, =ADDR_LED_15_0
   67 00000032 801A            STRH             R2, [R3]
   68 00000034         
   69 00000034 0A10            LSRS             R0, R2, #8
   70 00000036 4B18            LDR              R3, =op1_mask
   71 00000038 0011            MOVS             R1, R2
   72 0000003A 4019            ANDS             R1, R3
   73 0000003C         
   74 0000003C         
   75 0000003C         ; END: To be programmed
   76 0000003C         
   77 0000003C         read_hexsw                           ; Read operation in
                                                            to R2 and display o
                                                            n 7seg.
   78 0000003C         ; STUDENTS: To be programmed
   79 0000003C 4A17            LDR              R2, =ADDR_HEX_SWITCH
   80 0000003E 6812            LDR              R2, [R2]
   81 00000040 4B17            LDR              R3, =rot_mask
   82 00000042 401A            ANDS             R2, R2, R3
   83 00000044 4B17            LDR              R3, =ADDR_7_SEG_BIN_DS1_0



ARM Macro Assembler    Page 3 


   84 00000046 601A            STR              R2, [R3]
   85 00000048         
   86 00000048         ; END: To be programmed
   87 00000048         
   88 00000048         case_switch                          ; Implement switch 
                                                            statement as shown 
                                                            on lecture slide
   89 00000048         ; STUDENTS: To be programmed
   90 00000048 2A0B            CMP              R2, #NR_CASES
   91 0000004A D21C            BHS              case_default
   92 0000004C 0092            LSLS             R2, #2
   93 0000004E 4F16            LDR              R7, =jump_table
   94 00000050 58BF            LDR              R7, [R7, R2]
   95 00000052 4738            BX               R7
   96 00000054         
   97 00000054         ; END: To be programmed
   98 00000054         
   99 00000054         
  100 00000054         ; Add the code for the individual cases below
  101 00000054         ; - operand 1 in R0
  102 00000054         ; - operand 2 in R1
  103 00000054         ; - result in R0
  104 00000054         
  105 00000054 4815    case_dark
                               LDR              R0, =0
  106 00000056 E018            B                display_result
  107 00000058         
  108 00000058 1840    case_add
                               ADDS             R0, R0, R1
  109 0000005A E016            B                display_result
  110 0000005C         
  111 0000005C 1A40    case_sub
                               SUBS             R0, R0, R1
  112 0000005E E014            B                display_result
  113 00000060         
  114 00000060 4348    case_mul
                               MULS             R0, R1, R0
  115 00000062 E012            B                display_result
  116 00000064         
  117 00000064 4008    case_and
                               ANDS             R0, R0, R1
  118 00000066 E010            B                display_result
  119 00000068         
  120 00000068 4308    case_or ORRS             R0, R0, R1
  121 0000006A E00E            B                display_result
  122 0000006C         
  123 0000006C 4048    case_xor
                               EORS             R0, R0, R1
  124 0000006E E00C            B                display_result
  125 00000070         
  126 00000070 43C0    case_not
                               MVNS             R0, R0
  127 00000072 E00A            B                display_result
  128 00000074         
  129 00000074 4008    case_nand
                               ANDS             R0, R0, R1
  130 00000076 43C0            MVNS             R0, R0
  131 00000078 E007            B                display_result
  132 0000007A         



ARM Macro Assembler    Page 4 


  133 0000007A 4308    case_nor
                               ORRS             R0, R0, R1
  134 0000007C 43C0            MVNS             R0, R0
  135 0000007E E004            B                display_result
  136 00000080         
  137 00000080 4048    case_xnor
                               EORS             R0, R0, R1
  138 00000082 43C0            MVNS             R0, R0
  139 00000084 E001            B                display_result
  140 00000086         
  141 00000086         case_default
  142 00000086 480A            LDR              R0, =0xFFFF
  143 00000088 E7FF            B                display_result
  144 0000008A         
  145 0000008A         
  146 0000008A         ; STUDENTS: To be programmed
  147 0000008A         
  148 0000008A         
  149 0000008A         ; END: To be programmed
  150 0000008A         
  151 0000008A         
  152 0000008A         display_result                       ; Display result on
                                                             LEDs
  153 0000008A         ; STUDENTS: To be programmed
  154 0000008A 490A            LDR              R1, =ADDR_LED_31_16
  155 0000008C 8008            STRH             R0, [R1]
  156 0000008E         
  157 0000008E         ; END: To be programmed
  158 0000008E         
  159 0000008E E7CD            B                read_dipsw
  160 00000090         
  161 00000090                 ALIGN
  162 00000090                 ENDP
  163 00000090         
  164 00000090         ; ------------------------------------------------------
                       -------------
  165 00000090         ; -- End of file
  166 00000090         ; ------------------------------------------------------
                       -------------                      
  167 00000090                 END
              60000200 
              60000100 
              000000FF 
              60000211 
              0000000F 
              60000114 
              00000000 
              00000000 
              0000FFFF 
              60000102 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\main.d -o.\build\main.o -I.\RTE\_Target_1 -IC:\Users\weyti\AppData\Local\Ar
m\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\weyti\AppData\Local\
Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\weyti\AppData\L
ocal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --predefin
e="_RTE_ SETA 1" --list=.\build\main.lst app\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

case_add 00000058

Symbol: case_add
   Definitions
      At line 108 in file app\main.s
   Uses
      At line 40 in file app\main.s
Comment: case_add used once
case_and 00000064

Symbol: case_and
   Definitions
      At line 117 in file app\main.s
   Uses
      At line 43 in file app\main.s
Comment: case_and used once
case_dark 00000054

Symbol: case_dark
   Definitions
      At line 105 in file app\main.s
   Uses
      At line 39 in file app\main.s
Comment: case_dark used once
case_default 00000086

Symbol: case_default
   Definitions
      At line 141 in file app\main.s
   Uses
      At line 91 in file app\main.s
Comment: case_default used once
case_mul 00000060

Symbol: case_mul
   Definitions
      At line 114 in file app\main.s
   Uses
      At line 42 in file app\main.s
Comment: case_mul used once
case_nand 00000074

Symbol: case_nand
   Definitions
      At line 129 in file app\main.s
   Uses
      At line 47 in file app\main.s
Comment: case_nand used once
case_nor 0000007A

Symbol: case_nor
   Definitions
      At line 133 in file app\main.s
   Uses
      At line 48 in file app\main.s
Comment: case_nor used once
case_not 00000070

Symbol: case_not



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 126 in file app\main.s
   Uses
      At line 46 in file app\main.s
Comment: case_not used once
case_or 00000068

Symbol: case_or
   Definitions
      At line 120 in file app\main.s
   Uses
      At line 44 in file app\main.s
Comment: case_or used once
case_sub 0000005C

Symbol: case_sub
   Definitions
      At line 111 in file app\main.s
   Uses
      At line 41 in file app\main.s
Comment: case_sub used once
case_switch 00000048

Symbol: case_switch
   Definitions
      At line 88 in file app\main.s
   Uses
      None
Comment: case_switch unused
case_xnor 00000080

Symbol: case_xnor
   Definitions
      At line 137 in file app\main.s
   Uses
      At line 49 in file app\main.s
Comment: case_xnor used once
case_xor 0000006C

Symbol: case_xor
   Definitions
      At line 123 in file app\main.s
   Uses
      At line 45 in file app\main.s
Comment: case_xor used once
display_result 0000008A

Symbol: display_result
   Definitions
      At line 152 in file app\main.s
   Uses
      At line 106 in file app\main.s
      At line 109 in file app\main.s
      At line 112 in file app\main.s
      At line 115 in file app\main.s
      At line 118 in file app\main.s
      At line 121 in file app\main.s
      At line 124 in file app\main.s
      At line 127 in file app\main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 131 in file app\main.s
      At line 135 in file app\main.s
      At line 139 in file app\main.s
      At line 143 in file app\main.s

jump_table 00000000

Symbol: jump_table
   Definitions
      At line 36 in file app\main.s
   Uses
      At line 93 in file app\main.s
Comment: jump_table used once
main 0000002C

Symbol: main
   Definitions
      At line 59 in file app\main.s
   Uses
      At line 60 in file app\main.s
Comment: main used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 21 in file app\main.s
   Uses
      None
Comment: myCode unused
read_dipsw 0000002C

Symbol: read_dipsw
   Definitions
      At line 62 in file app\main.s
   Uses
      At line 159 in file app\main.s
Comment: read_dipsw used once
read_hexsw 0000003C

Symbol: read_hexsw
   Definitions
      At line 77 in file app\main.s
   Uses
      None
Comment: read_hexsw unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS1_0 60000114

Symbol: ADDR_7_SEG_BIN_DS1_0
   Definitions
      At line 27 in file app\main.s
   Uses
      At line 83 in file app\main.s
Comment: ADDR_7_SEG_BIN_DS1_0 used once
ADDR_DIP_SWITCH_15_0 60000200

Symbol: ADDR_DIP_SWITCH_15_0
   Definitions
      At line 28 in file app\main.s
   Uses
      At line 64 in file app\main.s
Comment: ADDR_DIP_SWITCH_15_0 used once
ADDR_HEX_SWITCH 60000211

Symbol: ADDR_HEX_SWITCH
   Definitions
      At line 29 in file app\main.s
   Uses
      At line 79 in file app\main.s
Comment: ADDR_HEX_SWITCH used once
ADDR_LED_15_0 60000100

Symbol: ADDR_LED_15_0
   Definitions
      At line 25 in file app\main.s
   Uses
      At line 66 in file app\main.s
Comment: ADDR_LED_15_0 used once
ADDR_LED_31_16 60000102

Symbol: ADDR_LED_31_16
   Definitions
      At line 26 in file app\main.s
   Uses
      At line 154 in file app\main.s
Comment: ADDR_LED_31_16 used once
NR_CASES 0000000B

Symbol: NR_CASES
   Definitions
      At line 34 in file app\main.s
   Uses
      At line 90 in file app\main.s
Comment: NR_CASES used once
op1_mask 000000FF

Symbol: op1_mask
   Definitions
      At line 31 in file app\main.s
   Uses
      At line 70 in file app\main.s
Comment: op1_mask used once
rot_mask 0000000F

Symbol: rot_mask



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 32 in file app\main.s
   Uses
      At line 81 in file app\main.s
Comment: rot_mask used once
8 symbols
362 symbols in table
