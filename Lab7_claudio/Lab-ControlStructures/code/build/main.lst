


ARM Macro Assembler    Page 1 


    1 00000000         ;* -----------------------------------------------------
                       -------------
    2 00000000         ;* --  _____       ______  _____                        
                                   -
    3 00000000         ;* -- |_   _|     |  ____|/ ____|                       
                                   -
    4 00000000         ;* --   | |  _ __ | |__  | (___    Institute of Embedded
                        Systems    -
    5 00000000         ;* --   | | | '_ \|  __|  \___ \   Zurich University of 
                                   -
    6 00000000         ;* --  _| |_| | | | |____ ____) |  Applied Sciences     
                                   -
    7 00000000         ;* -- |_____|_| |_|______|_____/   8401 Winterthur, Swit
                       zerland     -
    8 00000000         ;* -----------------------------------------------------
                       -------------
    9 00000000         ;* --
   10 00000000         ;* -- Project     : CT1 - Lab 7
   11 00000000         ;* -- Description : Control structures
   12 00000000         ;* -- 
   13 00000000         ;* -- $Id: main.s 3748 2016-10-31 13:26:44Z kesr $
   14 00000000         ;* -----------------------------------------------------
                       -------------
   15 00000000         
   16 00000000         
   17 00000000         ; ------------------------------------------------------
                       -------------
   18 00000000         ; -- Constants
   19 00000000         ; ------------------------------------------------------
                       -------------
   20 00000000         
   21 00000000                 AREA             myCode, CODE, READONLY
   22 00000000         
   23 00000000                 THUMB
   24 00000000         
   25 00000000 60000100 
                       ADDR_LED_15_0
                               EQU              0x60000100
   26 00000000 60000102 
                       ADDR_LED_31_16
                               EQU              0x60000102
   27 00000000 60000114 
                       ADDR_7_SEG_BIN_DS1_0
                               EQU              0x60000114
   28 00000000 60000200 
                       ADDR_DIP_SWITCH_15_0
                               EQU              0x60000200
   29 00000000 60000211 
                       ADDR_HEX_SWITCH
                               EQU              0x60000211
   30 00000000         
   31 00000000 0000000B 
                       NR_CASES
                               EQU              0xB
   32 00000000         
   33 00000000         ; MASKS for Operands
   34 00000000 000000FF 
                       OP1_MASK
                               EQU              0x00FF



ARM Macro Assembler    Page 2 


   35 00000000 0000FF00 
                       OP2_MASK
                               EQU              0xFF00
   36 00000000         
   37 00000000         ;MASK for rotary Switch
   38 00000000 0000000F 
                       MASK_ROT_SW
                               EQU              0xF
   39 00000000         
   40 00000000         jump_table                           ; ordered table con
                                                            taining the labels 
                                                            of all cases
   41 00000000         
   42 00000000         ; STUDENTS: To be programmed 
   43 00000000         
   44 00000000 00000000        DCD              case_DARK   ; +0  (R2*4)
   45 00000004 00000000        DCD              case_ADD    ; +4
   46 00000008 00000000        DCD              case_SUB    ; +8
   47 0000000C 00000000        DCD              case_MUL    ; +12
   48 00000010 00000000        DCD              case_AND    ; +16
   49 00000014 00000000        DCD              case_OR     ; +20
   50 00000018 00000000        DCD              case_XOR    ; +24
   51 0000001C 00000000        DCD              case_NOT    ; +28
   52 00000020 00000000        DCD              case_NAND   ; +32
   53 00000024 00000000        DCD              case_NOR    ; +36
   54 00000028 00000000        DCD              case_XNOR   ; +40
   55 0000002C 00000000        DCD              case_default ; +44 
   56 00000030         
   57 00000030         ; END: To be programmed
   58 00000030         
   59 00000030         
   60 00000030         ; ------------------------------------------------------
                       -------------
   61 00000030         ; -- Main
   62 00000030         ; ------------------------------------------------------
                       -------------   
   63 00000030         
   64 00000030         main    PROC
   65 00000030                 EXPORT           main
   66 00000030         
   67 00000030         read_dipsw                           ; Read operands int
                                                            o R0 and R1 and dis
                                                            play on LEDs
   68 00000030         
   69 00000030         ; STUDENTS: To be programmed
   70 00000030         
   71 00000030 481C            LDR              R0, =OP1_MASK
   72 00000032 491D            LDR              R1, =OP2_MASK
   73 00000034 4F1D            LDR              R7, =ADDR_DIP_SWITCH_15_0
   74 00000036 683F            LDR              R7, [R7]
   75 00000038         
   76 00000038 4038            ANDS             R0, R0, R7  ; SW_7_0 to R0 OP1
   77 0000003A 4039            ANDS             R1, R1, R7  ; SW_15_0 to R1 OP2
                                                            
   78 0000003C         
   79 0000003C 4B1C            LDR              R3, =ADDR_LED_15_0
   80 0000003E         
   81 0000003E 6018            STR              R0, [R3]
   82 00000040 6019            STR              R1, [R3]



ARM Macro Assembler    Page 3 


   83 00000042         
   84 00000042         
   85 00000042         
   86 00000042         ; END: To be programmed
   87 00000042         
   88 00000042         read_hexsw                           ; Read operation in
                                                            to R2 and display o
                                                            n 7seg.
   89 00000042         
   90 00000042         ; STUDENTS: To be programmed
   91 00000042         
   92 00000042 4A1C            LDR              R2, =ADDR_HEX_SWITCH
   93 00000044 4D1C            LDR              R5, =MASK_ROT_SW
   94 00000046 6812            LDR              R2, [R2]
   95 00000048 402A            ANDS             R2, R2, R5
   96 0000004A         
   97 0000004A 4C1C            LDR              R4, =ADDR_7_SEG_BIN_DS1_0
   98 0000004C 6022            STR              R2, [R4]    ; ROT_SW to DS0
   99 0000004E         
  100 0000004E         ; END: To be programmed
  101 0000004E         
  102 0000004E         case_switch                          ; Implement switch 
                                                            statement as shown 
                                                            on lecture slide
  103 0000004E         
  104 0000004E         ; STUDENTS: To be programmed
  105 0000004E         
  106 0000004E 2A0B            CMP              R2, #NR_CASES
  107 00000050 D222            BHS              case_default
  108 00000052 0092            LSLS             R2, #2      ; (*4 jump to case)
                                                            
  109 00000054 4E1A            LDR              R6, =jump_table
  110 00000056 58B6            LDR              R6, [R6, R2]
  111 00000058 4730            BX               R6
  112 0000005A         
  113 0000005A         ; END: To be programmed
  114 0000005A         
  115 0000005A         
  116 0000005A         ; Add the code for the individual cases below
  117 0000005A         ; - operand 1 in R0
  118 0000005A         ; - operand 2 in R1
  119 0000005A         ; - result in R0
  120 0000005A         
  121 0000005A         case_DARK
  122 0000005A 481A            LDR              R0, =0
  123 0000005C E01E            B                display_result
  124 0000005E         
  125 0000005E         case_ADD
  126 0000005E 1840            ADDS             R0, R0, R1
  127 00000060 E01C            B                display_result
  128 00000062         
  129 00000062         case_SUB
  130 00000062 1A40            SUBS             R0, R0, R1
  131 00000064 E01A            B                display_result
  132 00000066         
  133 00000066         case_MUL
  134 00000066 4348            MULS             R0, R1, R0
  135 00000068 E018            B                display_result
  136 0000006A         



ARM Macro Assembler    Page 4 


  137 0000006A         case_AND
  138 0000006A 0A09            LSRS             R1, #8
  139 0000006C 4008            ANDS             R0, R0, R1
  140 0000006E E015            B                display_result
  141 00000070         
  142 00000070         case_OR
  143 00000070 0A09            LSRS             R1, #8
  144 00000072 4308            ORRS             R0, R0, R1
  145 00000074 E012            B                display_result
  146 00000076         
  147 00000076         case_XOR
  148 00000076 0A09            LSRS             R1, #8
  149 00000078 4048            EORS             R0, R0, R1
  150 0000007A E00F            B                display_result
  151 0000007C         
  152 0000007C         case_NOT
  153 0000007C 43C0            MVNS             R0, R0
  154 0000007E E00D            B                display_result
  155 00000080         
  156 00000080         case_NAND
  157 00000080 0A09            LSRS             R1, #8
  158 00000082 4008            ANDS             R0, R0, R1
  159 00000084 43C0            MVNS             R0, R0
  160 00000086 E009            B                display_result
  161 00000088         
  162 00000088         case_NOR
  163 00000088 0A09            LSRS             R1, #8
  164 0000008A 4308            ORRS             R0, R0, R1
  165 0000008C 43C0            MVNS             R0, R0
  166 0000008E E005            B                display_result
  167 00000090         
  168 00000090         case_XNOR
  169 00000090 0A09            LSRS             R1, #8
  170 00000092 4048            EORS             R0, R0, R1
  171 00000094 43C0            MVNS             R0, R0
  172 00000096 E001            B                display_result
  173 00000098         
  174 00000098         case_default
  175 00000098 480B            LDR              R0, =0xFFFF
  176 0000009A E7FF            B                display_result
  177 0000009C         
  178 0000009C         ; STUDENTS: To be programmed
  179 0000009C         
  180 0000009C         
  181 0000009C         ; END: To be programmed
  182 0000009C         
  183 0000009C         
  184 0000009C         display_result                       ; Display result on
                                                             LEDs
  185 0000009C         
  186 0000009C         ; STUDENTS: To be programmed
  187 0000009C         
  188 0000009C 490B            LDR              R1, =ADDR_LED_31_16
  189 0000009E 8008            STRH             R0, [R1]
  190 000000A0         
  191 000000A0         ; END: To be programmed
  192 000000A0         
  193 000000A0 E7C6            B                read_dipsw
  194 000000A2         



ARM Macro Assembler    Page 5 


  195 000000A2 00 00           ALIGN
  196 000000A4                 ENDP
  197 000000A4         
  198 000000A4         ; ------------------------------------------------------
                       -------------
  199 000000A4         ; -- End of file
  200 000000A4         ; ------------------------------------------------------
                       -------------                      
  201 000000A4                 END
              000000FF 
              0000FF00 
              60000200 
              60000100 
              60000211 
              0000000F 
              60000114 
              00000000 
              00000000 
              0000FFFF 
              60000102 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\main.d -o.\build\main.o -I.\RTE\_Target_1 -IC:\Users\claud\AppData\Local\Ar
m\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\claud\AppData\Local\
Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\claud\AppData\L
ocal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --predefin
e="_RTE_ SETA 1" --list=.\build\main.lst app\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

case_ADD 0000005E

Symbol: case_ADD
   Definitions
      At line 125 in file app\main.s
   Uses
      At line 45 in file app\main.s
Comment: case_ADD used once
case_AND 0000006A

Symbol: case_AND
   Definitions
      At line 137 in file app\main.s
   Uses
      At line 48 in file app\main.s
Comment: case_AND used once
case_DARK 0000005A

Symbol: case_DARK
   Definitions
      At line 121 in file app\main.s
   Uses
      At line 44 in file app\main.s
Comment: case_DARK used once
case_MUL 00000066

Symbol: case_MUL
   Definitions
      At line 133 in file app\main.s
   Uses
      At line 47 in file app\main.s
Comment: case_MUL used once
case_NAND 00000080

Symbol: case_NAND
   Definitions
      At line 156 in file app\main.s
   Uses
      At line 52 in file app\main.s
Comment: case_NAND used once
case_NOR 00000088

Symbol: case_NOR
   Definitions
      At line 162 in file app\main.s
   Uses
      At line 53 in file app\main.s
Comment: case_NOR used once
case_NOT 0000007C

Symbol: case_NOT
   Definitions
      At line 152 in file app\main.s
   Uses
      At line 51 in file app\main.s
Comment: case_NOT used once
case_OR 00000070

Symbol: case_OR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 142 in file app\main.s
   Uses
      At line 49 in file app\main.s
Comment: case_OR used once
case_SUB 00000062

Symbol: case_SUB
   Definitions
      At line 129 in file app\main.s
   Uses
      At line 46 in file app\main.s
Comment: case_SUB used once
case_XNOR 00000090

Symbol: case_XNOR
   Definitions
      At line 168 in file app\main.s
   Uses
      At line 54 in file app\main.s
Comment: case_XNOR used once
case_XOR 00000076

Symbol: case_XOR
   Definitions
      At line 147 in file app\main.s
   Uses
      At line 50 in file app\main.s
Comment: case_XOR used once
case_default 00000098

Symbol: case_default
   Definitions
      At line 174 in file app\main.s
   Uses
      At line 55 in file app\main.s
      At line 107 in file app\main.s

case_switch 0000004E

Symbol: case_switch
   Definitions
      At line 102 in file app\main.s
   Uses
      None
Comment: case_switch unused
display_result 0000009C

Symbol: display_result
   Definitions
      At line 184 in file app\main.s
   Uses
      At line 123 in file app\main.s
      At line 127 in file app\main.s
      At line 131 in file app\main.s
      At line 135 in file app\main.s
      At line 140 in file app\main.s
      At line 145 in file app\main.s
      At line 150 in file app\main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 154 in file app\main.s
      At line 160 in file app\main.s
      At line 166 in file app\main.s
      At line 172 in file app\main.s
      At line 176 in file app\main.s

jump_table 00000000

Symbol: jump_table
   Definitions
      At line 40 in file app\main.s
   Uses
      At line 109 in file app\main.s
Comment: jump_table used once
main 00000030

Symbol: main
   Definitions
      At line 64 in file app\main.s
   Uses
      At line 65 in file app\main.s
Comment: main used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 21 in file app\main.s
   Uses
      None
Comment: myCode unused
read_dipsw 00000030

Symbol: read_dipsw
   Definitions
      At line 67 in file app\main.s
   Uses
      At line 193 in file app\main.s
Comment: read_dipsw used once
read_hexsw 00000042

Symbol: read_hexsw
   Definitions
      At line 88 in file app\main.s
   Uses
      None
Comment: read_hexsw unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS1_0 60000114

Symbol: ADDR_7_SEG_BIN_DS1_0
   Definitions
      At line 27 in file app\main.s
   Uses
      At line 97 in file app\main.s
Comment: ADDR_7_SEG_BIN_DS1_0 used once
ADDR_DIP_SWITCH_15_0 60000200

Symbol: ADDR_DIP_SWITCH_15_0
   Definitions
      At line 28 in file app\main.s
   Uses
      At line 73 in file app\main.s
Comment: ADDR_DIP_SWITCH_15_0 used once
ADDR_HEX_SWITCH 60000211

Symbol: ADDR_HEX_SWITCH
   Definitions
      At line 29 in file app\main.s
   Uses
      At line 92 in file app\main.s
Comment: ADDR_HEX_SWITCH used once
ADDR_LED_15_0 60000100

Symbol: ADDR_LED_15_0
   Definitions
      At line 25 in file app\main.s
   Uses
      At line 79 in file app\main.s
Comment: ADDR_LED_15_0 used once
ADDR_LED_31_16 60000102

Symbol: ADDR_LED_31_16
   Definitions
      At line 26 in file app\main.s
   Uses
      At line 188 in file app\main.s
Comment: ADDR_LED_31_16 used once
MASK_ROT_SW 0000000F

Symbol: MASK_ROT_SW
   Definitions
      At line 38 in file app\main.s
   Uses
      At line 93 in file app\main.s
Comment: MASK_ROT_SW used once
NR_CASES 0000000B

Symbol: NR_CASES
   Definitions
      At line 31 in file app\main.s
   Uses
      At line 106 in file app\main.s
Comment: NR_CASES used once
OP1_MASK 000000FF

Symbol: OP1_MASK



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 34 in file app\main.s
   Uses
      At line 71 in file app\main.s
Comment: OP1_MASK used once
OP2_MASK 0000FF00

Symbol: OP2_MASK
   Definitions
      At line 35 in file app\main.s
   Uses
      At line 72 in file app\main.s
Comment: OP2_MASK used once
9 symbols
363 symbols in table
