


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P06 "ALU und Sprungbefehle" mit MUL
   13 00000000         ; --
   14 00000000         ; -- $Id: main.s 4857 2019-09-10 17:30:17Z akdi $
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         
   24 00000000 60000100 
                       ADDR_LED_31_0
                               EQU              0x60000100
   25 00000000 60000102 
                       ADDR_LED_31_16
                               EQU              0x60000102
   26 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   27 00000000 60000201 
                       ADDR_DIP_SWITCH_15_8
                               EQU              0x60000201
   28 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   29 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   30 00000000         
   31 00000000 60000340 
                       ADDR_LCD_RED
                               EQU              0x60000340
   32 00000000 60000342 
                       ADDR_LCD_GREEN
                               EQU              0x60000342



ARM Macro Assembler    Page 2 


   33 00000000 60000344 
                       ADDR_LCD_BLUE
                               EQU              0x60000344
   34 00000000 0000FFFF 
                       LCD_BACKLIGHT_FULL
                               EQU              0xffff
   35 00000000 00000000 
                       LCD_BACKLIGHT_OFF
                               EQU              0x0000
   36 00000000 0000000F 
                       BCD_MASK
                               EQU              0x0000000F
   37 00000000 0000000A 
                       MULS_VALUE
                               EQU              0x0000000A
   38 00000000 00000001 
                       T0_MASK EQU              0x00000001
   39 00000000 00000080 
                       SHIFT_MASK
                               EQU              0x00000080
   40 00000000         
   41 00000000         ; ------------------------------------------------------
                       ------------
   42 00000000         ; -- myCode
   43 00000000         ; ------------------------------------------------------
                       ------------
   44 00000000                 AREA             myCode, CODE, READONLY
   45 00000000         
   46 00000000                 ENTRY
   47 00000000         
   48 00000000         main    PROC
   49 00000000                 export           main
   50 00000000         
   51 00000000         ; STUDENTS: To be programmed
   52 00000000 4C26            LDR              R4, =BCD_MASK
   53 00000002 4827            LDR              R0, =ADDR_DIP_SWITCH_7_0
   54 00000004 6800            LDR              R0 , [R0]
   55 00000006 4020            ANDS             R0, R0, R4
   56 00000008 0007            MOVS             R7, R0
   57 0000000A 4926            LDR              R1, =ADDR_DIP_SWITCH_15_8
   58 0000000C 6809            LDR              R1, [R1]
   59 0000000E 4021            ANDS             R1, R1, R4
   60 00000010         
   61 00000010         ;copy of R1 for MULS instruction
   62 00000010 000D            MOVS             R5, R1
   63 00000012         ;shift R1 4 to the left
   64 00000012 0109            LSLS             R1, #4
   65 00000014         
   66 00000014         ;combine both values with OR oparation
   67 00000014 4301            ORRS             R1, R1, R0
   68 00000016         
   69 00000016         ;display BCD on HEX
   70 00000016 4824            LDR              R0, =ADDR_7_SEG_BIN_DS3_0
   71 00000018         ;display BCD on 7 Seg 0,1
   72 00000018 7001            STRB             R1, [R0, #0]
   73 0000001A         
   74 0000001A         ;load led address
   75 0000001A 4824            LDR              R0, =ADDR_LED_31_0
   76 0000001C         



ARM Macro Assembler    Page 3 


   77 0000001C 7001            STRB             R1, [R0, #0]
   78 0000001E         
   79 0000001E         ;if T0 is pressed
   80 0000001E 4824            LDR              R0, =T0_MASK
   81 00000020 4924            LDR              R1, =ADDR_BUTTONS
   82 00000022 7809            LDRB             R1, [R1]
   83 00000024 4001            ANDS             R1, R0
   84 00000026         
   85 00000026 D108            BNE              T0_pressed
   86 00000028         
   87 00000028         ;binary code
   88 00000028 4E23            LDR              R6, =MULS_VALUE
   89 0000002A 4375            MULS             R5, R6, R5
   90 0000002C         ;ORRS R7, R7, R5
   91 0000002C 442F            ADD              R7, R7, R5
   92 0000002E 4823            LDR              R0, =ADDR_LCD_RED
   93 00000030 4923            LDR              R1, =0x0000
   94 00000032 4A24            LDR              R2, =0xffff
   95 00000034 8001            STRH             R1, [r0, #0]
   96 00000036 8082            STRH             R2, [r0, #4]
   97 00000038         
   98 00000038 E009            B                T0_unpressed
   99 0000003A         
  100 0000003A 002E    T0_pressed
                               MOVS             R6, R5
  101 0000003C 006D            LSLS             R5, #1
  102 0000003E 00F6            LSLS             R6, #3
  103 00000040 19AD            ADDS             R5, R5, R6
  104 00000042 442F            ADD              R7, R7, R5
  105 00000044 481D            LDR              R0, =ADDR_LCD_RED
  106 00000046 491F            LDR              R1, =0xffff
  107 00000048 4A1D            LDR              R2, =0x0000
  108 0000004A 8001            STRH             R1, [r0, #0]
  109 0000004C 8082            STRH             R2, [r0, #4]
  110 0000004E         
  111 0000004E         T0_unpressed
  112 0000004E         ;load led address
  113 0000004E 4817            LDR              R0, =ADDR_LED_31_0
  114 00000050 7047            STRB             R7, [R0, #1]
  115 00000052         
  116 00000052         ;display HEX on 7SEG
  117 00000052 4815            LDR              R0, =ADDR_7_SEG_BIN_DS3_0
  118 00000054         ;display BCD on 7 Seg 0,1
  119 00000054 7047            STRB             R7, [R0, #1]
  120 00000056         
  121 00000056         
  122 00000056         ;Task 3.2
  123 00000056         ; Create width of rotation bar
  124 00000056 2000            MOVS             R0, #0
  125 00000058 2107            MOVS             R1, #7
  126 0000005A 087F    barloop LSRS             R7, R7, #1  ;move R7 1 to the l
                                                            eft
  127 0000005C D301            BCC              endbar      ;"if" C==0 move str
                                                            aight no BNE barloo
                                                            p
  128 0000005E 0040            LSLS             R0, #1
  129 00000060 1C40            ADDS             R0, R0, #1
  130 00000062 3901    endbar  SUBS             R1, #1
  131 00000064 D1F9            BNE              barloop



ARM Macro Assembler    Page 4 


  132 00000066 4B18            LDR              R3, =ADDR_LED_31_16
  133 00000068 6018            STR              R0, [R3, #0]
  134 0000006A         
  135 0000006A         ;rotate bar left to right
  136 0000006A 0007            MOVS             R7, R0      ;clone R7 into R6
  137 0000006C 0006            MOVS             R6, R0      ;clone R6 into R6
  138 0000006E 0436            LSLS             R6, #16     ;shift R6 16 to the
                                                             left
  139 00000070 4337            ORRS             R7, R7, R6  ;OR with R7
  140 00000072         
  141 00000072 2000            MOVS             R0, #0      ;counter variable
  142 00000074 2110            MOVS             R1, #16
  143 00000076 4288    rot_loop
                               CMP              R0, R1      ;is R0 > R1?  
  144 00000078 D808            BHI              go_on       ;after 16 rotations
                                                             break out
  145 0000007A 1C40            ADDS             R0, R0, #1  ;+1
  146 0000007C 2401            MOVS             R4, #1
  147 0000007E 41E7            RORS             R7, R7, R4  ;Rotate R7 1 to the
                                                             right
  148 00000080 4C11            LDR              R4, =ADDR_LED_31_16
  149 00000082 6027            STR              R7, [R4, #0]
  150 00000084 F7FF FFFE       BL               pause       ;call delay functio
                                                            n
  151 00000088 F7FF FFF5       BL               rot_loop
  152 0000008C         go_on
  153 0000008C         
  154 0000008C         
  155 0000008C         ; END: To be programmed
  156 0000008C         
  157 0000008C E7FE            B                main
  158 0000008E                 ENDP
  159 0000008E         
  160 0000008E         ;----------------------------------------------------
  161 0000008E         ; Subroutines
  162 0000008E         ;----------------------------------------------------
  163 0000008E         
  164 0000008E         ;----------------------------------------------------
  165 0000008E         ; pause for disco_lights
  166 0000008E         pause   PROC
  167 0000008E B403            PUSH             {R0, R1}
  168 00000090 4907            LDR              R1, =1
  169 00000092 480E            LDR              R0, =0x000FFFFF
  170 00000094         
  171 00000094         loop
  172 00000094 1A40            SUBS             R0, R0, R1
  173 00000096 D2FD            BCS              loop
  174 00000098         
  175 00000098 BC03            POP              {R0, R1}
  176 0000009A 4770            BX               LR
  177 0000009C                 ALIGN
  178 0000009C                 ENDP
  179 0000009C         
  180 0000009C         count_bits
  181 0000009C         
  182 0000009C         ; ------------------------------------------------------
                       ------------
  183 0000009C         ; End of code
  184 0000009C         ; ------------------------------------------------------



ARM Macro Assembler    Page 5 


                       ------------
  185 0000009C                 END
              0000000F 
              60000200 
              60000201 
              60000114 
              60000100 
              00000001 
              60000210 
              0000000A 
              60000340 
              00000000 
              0000FFFF 
              60000102 
              000FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\main.d -o.\build\main.o -I.\RTE\_Target_1 -IC:\Users\weyti\AppData\Local\Ar
m\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\weyti\AppData\Local\
Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\weyti\AppData\L
ocal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --predefin
e="_RTE_ SETA 1" --list=.\build\main.lst app\main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

T0_pressed 0000003A

Symbol: T0_pressed
   Definitions
      At line 100 in file app\main.s
   Uses
      At line 85 in file app\main.s
Comment: T0_pressed used once
T0_unpressed 0000004E

Symbol: T0_unpressed
   Definitions
      At line 111 in file app\main.s
   Uses
      At line 98 in file app\main.s
Comment: T0_unpressed used once
barloop 0000005A

Symbol: barloop
   Definitions
      At line 126 in file app\main.s
   Uses
      At line 131 in file app\main.s
Comment: barloop used once
count_bits 0000009C

Symbol: count_bits
   Definitions
      At line 180 in file app\main.s
   Uses
      None
Comment: count_bits unused
endbar 00000062

Symbol: endbar
   Definitions
      At line 130 in file app\main.s
   Uses
      At line 127 in file app\main.s
Comment: endbar used once
go_on 0000008C

Symbol: go_on
   Definitions
      At line 152 in file app\main.s
   Uses
      At line 144 in file app\main.s
Comment: go_on used once
loop 00000094

Symbol: loop
   Definitions
      At line 171 in file app\main.s
   Uses
      At line 173 in file app\main.s
Comment: loop used once
main 00000000

Symbol: main



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 48 in file app\main.s
   Uses
      At line 49 in file app\main.s
      At line 157 in file app\main.s

myCode 00000000

Symbol: myCode
   Definitions
      At line 44 in file app\main.s
   Uses
      None
Comment: myCode unused
pause 0000008E

Symbol: pause
   Definitions
      At line 166 in file app\main.s
   Uses
      At line 150 in file app\main.s
Comment: pause used once
rot_loop 00000076

Symbol: rot_loop
   Definitions
      At line 143 in file app\main.s
   Uses
      At line 151 in file app\main.s
Comment: rot_loop used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 28 in file app\main.s
   Uses
      At line 70 in file app\main.s
      At line 117 in file app\main.s

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 29 in file app\main.s
   Uses
      At line 81 in file app\main.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_15_8 60000201

Symbol: ADDR_DIP_SWITCH_15_8
   Definitions
      At line 27 in file app\main.s
   Uses
      At line 57 in file app\main.s
Comment: ADDR_DIP_SWITCH_15_8 used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 26 in file app\main.s
   Uses
      At line 53 in file app\main.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_BLUE 60000344

Symbol: ADDR_LCD_BLUE
   Definitions
      At line 33 in file app\main.s
   Uses
      None
Comment: ADDR_LCD_BLUE unused
ADDR_LCD_GREEN 60000342

Symbol: ADDR_LCD_GREEN
   Definitions
      At line 32 in file app\main.s
   Uses
      None
Comment: ADDR_LCD_GREEN unused
ADDR_LCD_RED 60000340

Symbol: ADDR_LCD_RED
   Definitions
      At line 31 in file app\main.s
   Uses
      At line 92 in file app\main.s
      At line 105 in file app\main.s

ADDR_LED_31_0 60000100



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: ADDR_LED_31_0
   Definitions
      At line 24 in file app\main.s
   Uses
      At line 75 in file app\main.s
      At line 113 in file app\main.s

ADDR_LED_31_16 60000102

Symbol: ADDR_LED_31_16
   Definitions
      At line 25 in file app\main.s
   Uses
      At line 132 in file app\main.s
      At line 148 in file app\main.s

BCD_MASK 0000000F

Symbol: BCD_MASK
   Definitions
      At line 36 in file app\main.s
   Uses
      At line 52 in file app\main.s
Comment: BCD_MASK used once
LCD_BACKLIGHT_FULL 0000FFFF

Symbol: LCD_BACKLIGHT_FULL
   Definitions
      At line 34 in file app\main.s
   Uses
      None
Comment: LCD_BACKLIGHT_FULL unused
LCD_BACKLIGHT_OFF 00000000

Symbol: LCD_BACKLIGHT_OFF
   Definitions
      At line 35 in file app\main.s
   Uses
      None
Comment: LCD_BACKLIGHT_OFF unused
MULS_VALUE 0000000A

Symbol: MULS_VALUE
   Definitions
      At line 37 in file app\main.s
   Uses
      At line 88 in file app\main.s
Comment: MULS_VALUE used once
SHIFT_MASK 00000080

Symbol: SHIFT_MASK
   Definitions
      At line 39 in file app\main.s
   Uses
      None
Comment: SHIFT_MASK unused
T0_MASK 00000001




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: T0_MASK
   Definitions
      At line 38 in file app\main.s
   Uses
      At line 80 in file app\main.s
Comment: T0_MASK used once
15 symbols
361 symbols in table
