


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P08 "Strukturierte Codierung" mit Assembler
   13 00000000         ; --
   14 00000000         ; -- $Id: struct_code.s 3787 2016-11-17 09:41:48Z kesr $
                       
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address-Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         ; input
   24 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   25 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   26 00000000         
   27 00000000         ; output
   28 00000000 60000100 
                       ADDR_LED_31_0
                               EQU              0x60000100
   29 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   30 00000000 60000340 
                       ADDR_LCD_COLOUR
                               EQU              0x60000340
   31 00000000 60000300 
                       ADDR_LCD_ASCII
                               EQU              0x60000300
   32 00000000 60000302 
                       ADDR_LCD_ASCII_BIT_POS
                               EQU              0x60000302
   33 00000000 60000314 



ARM Macro Assembler    Page 2 


                       ADDR_LCD_ASCII_2ND_LINE
                               EQU              0x60000314
   34 00000000         
   35 00000000         
   36 00000000         ; ------------------------------------------------------
                       ------------
   37 00000000         ; -- Program-Defines
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; value for clearing lcd
   40 00000000 00000000 
                       ASCII_DIGIT_CLEAR
                               EQU              0x00000000
   41 00000000 00000028 
                       LCD_LAST_OFFSET
                               EQU              0x00000028
   42 00000000         
   43 00000000         ; offset for showing the digit in the lcd
   44 00000000 00000030 
                       ASCII_DIGIT_OFFSET
                               EQU              0x00000030
   45 00000000         
   46 00000000         ; lcd background colors to be written
   47 00000000 00000000 
                       DISPLAY_COLOUR_RED
                               EQU              0
   48 00000000 00000002 
                       DISPLAY_COLOUR_GREEN
                               EQU              2
   49 00000000 00000004 
                       DISPLAY_COLOUR_BLUE
                               EQU              4
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000         ; ------------------------------------------------------
                       ------------
   54 00000000         ; -- myConstants
   55 00000000         ; ------------------------------------------------------
                       ------------
   56 00000000                 AREA             myConstants, DATA, READONLY
   57 00000000         ; display defines for hex / dec
   58 00000000 42 69 74 
              20       DISPLAY_BIT
                               DCB              "Bit "
   59 00000004 32      DISPLAY_2_BIT
                               DCB              "2"
   60 00000005 34      DISPLAY_4_BIT
                               DCB              "4"
   61 00000006 38      DISPLAY_8_BIT
                               DCB              "8"
   62 00000007 30 31 32 
              33 34 35 
              36 37 38 DISPLAY_ARR_BIT
                               DCB              "012345678"
   63 00000010                 ALIGN
   64 00000010         
   65 00000010         ; ------------------------------------------------------
                       ------------



ARM Macro Assembler    Page 3 


   66 00000010         ; -- myCode
   67 00000010         ; ------------------------------------------------------
                       ------------
   68 00000010                 AREA             myCode, CODE, READONLY
   69 00000000                 ENTRY
   70 00000000         
   71 00000000         ; imports for calls
   72 00000000                 import           adc_init
   73 00000000                 import           adc_get_value
   74 00000000         
   75 00000000         main    PROC
   76 00000000                 export           main
   77 00000000         ; 8 bit resolution, cont. sampling
   78 00000000 F7FF FFFE       BL               adc_init
   79 00000004 F000 F84F       BL               clear_lcd
   80 00000008         
   81 00000008         main_loop
   82 00000008         ; STUDENTS: To be programmed
   83 00000008         
   84 00000008         ;load ADC value
   85 00000008 F7FF FFFE       BL               adc_get_value
   86 0000000C         
   87 0000000C         ;reset LCD every Loop
   88 0000000C 4B2F            LDR              R3, =ADDR_LCD_COLOUR
   89 0000000E 4A30            LDR              R2, =0x0000
   90 00000010 801A            STRH             R2, [R3, #DISPLAY_COLOUR_RED]
   91 00000012 805A            STRH             R2, [R3, #DISPLAY_COLOUR_GREEN]
   92 00000014 809A            STRH             R2, [R3, #DISPLAY_COLOUR_BLUE]
   93 00000016         
   94 00000016         ;check if Button T0 is pressed
   95 00000016 492F            LDR              R1, =ADDR_BUTTONS
   96 00000018 6809            LDR              R1, [R1]
   97 0000001A 2201            MOVS             R2, #0x01
   98 0000001C 4011            ANDS             R1,R2
   99 0000001E         
  100 0000001E         ;if NOT pressed
  101 0000001E D013            BEQ              released
  102 00000020 F000 F841       BL               clear_lcd
  103 00000024         ;display adc value on 7 seg
  104 00000024 4A2C            LDR              R2, =ADDR_7_SEG_BIN_DS3_0
  105 00000026 6010            STR              R0, [R2]
  106 00000028         
  107 00000028         ;set color to green
  108 00000028 4B28            LDR              R3, =ADDR_LCD_COLOUR
  109 0000002A 4C2C            LDR              R4, =0xFFFF ;max brightness
  110 0000002C 805C            STRH             R4, [R3, #DISPLAY_COLOUR_GREEN]
  111 0000002E 0001            MOVS             R1, R0
  112 00000030         ;Aufgabe 3b
  113 00000030 08C2            LSRS             R2, R0, #3  ;divide by 8
  114 00000032 3201            ADDS             R2, #1
  115 00000034 2300            MOVS             R3, #0      ;bar counter variab
                                                            le
  116 00000036 2500            MOVS             R5, #0      ;loop counter varia
                                                            ble
  117 00000038 006D    cnt     LSLS             R5, #1
  118 0000003A 3501            ADDS             R5, #1
  119 0000003C 3301            ADDS             R3, #1
  120 0000003E 429A            CMP              R2, R3
  121 00000040 D8FA            BHI              cnt



ARM Macro Assembler    Page 4 


  122 00000042         
  123 00000042         ;display the bar
  124 00000042 4C27            LDR              R4, =ADDR_LED_31_0
  125 00000044 6025            STR              R5, [R4]
  126 00000046         
  127 00000046 E7DF            B                main_loop
  128 00000048         
  129 00000048         released
  130 00000048         ;read Dip switch 0-7
  131 00000048 4926            LDR              R1, =ADDR_DIP_SWITCH_7_0
  132 0000004A 7809            LDRB             R1, [R1]
  133 0000004C         
  134 0000004C         ;set color to RED
  135 0000004C 4B1F            LDR              R3, =ADDR_LCD_COLOUR
  136 0000004E 4C23            LDR              R4, =0xFFFF
  137 00000050         ;if Diff < 0
  138 00000050 1A09            SUBS             R1, R1, R0  ;DIP - ADC
  139 00000052 D413            BMI              less
  140 00000054         ;set color to blue
  141 00000054 809C            STRH             R4, [R3, #DISPLAY_COLOUR_BLUE]
  142 00000056         
  143 00000056         ;display ADC value to 7SEG
  144 00000056 4A20            LDR              R2, =ADDR_7_SEG_BIN_DS3_0
  145 00000058 6011            STR              R1, [R2]
  146 0000005A         
  147 0000005A         ;Aufgabe 3c
  148 0000005A 2910            CMP              R1, #16
  149 0000005C DA03            BGE              Bits_8
  150 0000005E 2904            CMP              R1, #4
  151 00000060 DA03            BGE              Bits_4
  152 00000062 4D21            LDR              R5, =DISPLAY_2_BIT
  153 00000064 E002            B                display
  154 00000066         Bits_8
  155 00000066 4D21            LDR              R5, =DISPLAY_8_BIT
  156 00000068 E000            B                display
  157 0000006A         Bits_4
  158 0000006A 4D21            LDR              R5, =DISPLAY_4_BIT
  159 0000006C F000 F81B 
                       display BL               clear_lcd
  160 00000070 782D            LDRB             R5, [R5]
  161 00000072 4E20            LDR              R6, =ADDR_LCD_ASCII
  162 00000074 6035            STR              R5, [R6]
  163 00000076 F000 F821       BL               write_bit_ascii ;display "Bit" 
                                                            on LCD
  164 0000007A E7C5            B                main_loop
  165 0000007C         
  166 0000007C         less                                 ;display ADC value 
                                                            to 7SEG
  167 0000007C 4A16            LDR              R2, =ADDR_7_SEG_BIN_DS3_0
  168 0000007E 6011            STR              R1, [R2]
  169 00000080         
  170 00000080         ;set color to red
  171 00000080 801C            STRH             R4, [R3, #DISPLAY_COLOUR_RED]
  172 00000082         ;Aufgabe 3d
  173 00000082 27FF            MOVS             R7, #0x000000FF
  174 00000084 4039            ANDS             R1, R1, R7
  175 00000086 2000            MOVS             R0, #0      ;counter variable
  176 00000088         ;MOVS R3, #0  ;for carry operation
  177 00000088 1E0B    s_cnt   SUBS             R3, R1, #0



ARM Macro Assembler    Page 5 


  178 0000008A D003            BEQ              end_cnt     ;if 0
  179 0000008C 0849            LSRS             R1, #1      ;left shift 1
  180 0000008E D3FB            BCC              s_cnt       ;if carry == 0 add 
                                                            1 to counter
  181 00000090 3001            ADDS             R0, #1
  182 00000092 E7F9            B                s_cnt
  183 00000094         end_cnt
  184 00000094         ;write the counted zeros to the 2nd line of the LCD
  185 00000094 F000 F807       BL               clear_lcd
  186 00000098 2108            MOVS             R1, #8
  187 0000009A 1A08            SUBS             R0, R1, R0
  188 0000009C 4E16            LDR              R6, =ADDR_LCD_ASCII_2ND_LINE
  189 0000009E 4D17            LDR              R5, =DISPLAY_ARR_BIT
  190 000000A0 582C            LDR              R4, [R5, R0]
  191 000000A2 7034            STRB             R4 , [R6]
  192 000000A4         
  193 000000A4         ; END: To be programmed
  194 000000A4 E7B0            B                main_loop
  195 000000A6         
  196 000000A6         clear_lcd
  197 000000A6 B407            PUSH             {R0, R1, R2}
  198 000000A8 4A09            LDR              R2, =0x0
  199 000000AA         clear_lcd_loop
  200 000000AA 4812            LDR              R0, =ADDR_LCD_ASCII
  201 000000AC 1880            ADDS             R0, R0, R2  ; add index to lcd 
                                                            offset
  202 000000AE 4908            LDR              R1, =ASCII_DIGIT_CLEAR
  203 000000B0 6001            STR              R1, [R0]
  204 000000B2 1D12            ADDS             R2, R2, #4  ; increas index by 
                                                            4 (word step)
  205 000000B4 2A28            CMP              R2, #LCD_LAST_OFFSET ; until in
                                                            dex reached last lc
                                                            d point
  206 000000B6 D4F8            BMI              clear_lcd_loop
  207 000000B8 BC07            POP              {R0, R1, R2}
  208 000000BA 4770            BX               LR
  209 000000BC         
  210 000000BC         write_bit_ascii
  211 000000BC B403            PUSH             {R0, R1}
  212 000000BE 4810            LDR              R0, =ADDR_LCD_ASCII_BIT_POS
  213 000000C0 4910            LDR              R1, =DISPLAY_BIT
  214 000000C2 6809            LDR              R1, [R1]
  215 000000C4 6001            STR              R1, [R0]
  216 000000C6 BC03            POP              {R0, R1}
  217 000000C8 4770            BX               LR
  218 000000CA         
  219 000000CA                 ENDP
  220 000000CA 00 00           ALIGN
  221 000000CC         
  222 000000CC         
  223 000000CC         ; ------------------------------------------------------
                       ------------
  224 000000CC         ; End of code
  225 000000CC         ; ------------------------------------------------------
                       ------------
  226 000000CC                 END
              60000340 
              00000000 
              60000210 



ARM Macro Assembler    Page 6 


              60000114 
              0000FFFF 
              60000100 
              60000200 
              00000000 
              00000000 
              00000000 
              60000300 
              60000314 
              00000000 
              60000302 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\struct_code.d -o.\build\struct_code.o -I.\RTE\_Target_1 -IC:\Users\claud\Ap
pData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\claud\
AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\c
laud\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA
 1" --predefine="_RTE_ SETA 1" --list=.\build\struct_code.lst app\struct_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DISPLAY_2_BIT 00000004

Symbol: DISPLAY_2_BIT
   Definitions
      At line 59 in file app\struct_code.s
   Uses
      At line 152 in file app\struct_code.s
Comment: DISPLAY_2_BIT used once
DISPLAY_4_BIT 00000005

Symbol: DISPLAY_4_BIT
   Definitions
      At line 60 in file app\struct_code.s
   Uses
      At line 158 in file app\struct_code.s
Comment: DISPLAY_4_BIT used once
DISPLAY_8_BIT 00000006

Symbol: DISPLAY_8_BIT
   Definitions
      At line 61 in file app\struct_code.s
   Uses
      At line 155 in file app\struct_code.s
Comment: DISPLAY_8_BIT used once
DISPLAY_ARR_BIT 00000007

Symbol: DISPLAY_ARR_BIT
   Definitions
      At line 62 in file app\struct_code.s
   Uses
      At line 189 in file app\struct_code.s
Comment: DISPLAY_ARR_BIT used once
DISPLAY_BIT 00000000

Symbol: DISPLAY_BIT
   Definitions
      At line 58 in file app\struct_code.s
   Uses
      At line 213 in file app\struct_code.s
Comment: DISPLAY_BIT used once
myConstants 00000000

Symbol: myConstants
   Definitions
      At line 56 in file app\struct_code.s
   Uses
      None
Comment: myConstants unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Bits_4 0000006A

Symbol: Bits_4
   Definitions
      At line 157 in file app\struct_code.s
   Uses
      At line 151 in file app\struct_code.s
Comment: Bits_4 used once
Bits_8 00000066

Symbol: Bits_8
   Definitions
      At line 154 in file app\struct_code.s
   Uses
      At line 149 in file app\struct_code.s
Comment: Bits_8 used once
clear_lcd 000000A6

Symbol: clear_lcd
   Definitions
      At line 196 in file app\struct_code.s
   Uses
      At line 79 in file app\struct_code.s
      At line 102 in file app\struct_code.s
      At line 159 in file app\struct_code.s
      At line 185 in file app\struct_code.s

clear_lcd_loop 000000AA

Symbol: clear_lcd_loop
   Definitions
      At line 199 in file app\struct_code.s
   Uses
      At line 206 in file app\struct_code.s
Comment: clear_lcd_loop used once
cnt 00000038

Symbol: cnt
   Definitions
      At line 117 in file app\struct_code.s
   Uses
      At line 121 in file app\struct_code.s
Comment: cnt used once
display 0000006C

Symbol: display
   Definitions
      At line 159 in file app\struct_code.s
   Uses
      At line 153 in file app\struct_code.s
      At line 156 in file app\struct_code.s

end_cnt 00000094

Symbol: end_cnt
   Definitions
      At line 183 in file app\struct_code.s
   Uses
      At line 178 in file app\struct_code.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: end_cnt used once
less 0000007C

Symbol: less
   Definitions
      At line 166 in file app\struct_code.s
   Uses
      At line 139 in file app\struct_code.s
Comment: less used once
main 00000000

Symbol: main
   Definitions
      At line 75 in file app\struct_code.s
   Uses
      At line 76 in file app\struct_code.s
Comment: main used once
main_loop 00000008

Symbol: main_loop
   Definitions
      At line 81 in file app\struct_code.s
   Uses
      At line 127 in file app\struct_code.s
      At line 164 in file app\struct_code.s
      At line 194 in file app\struct_code.s

myCode 00000000

Symbol: myCode
   Definitions
      At line 68 in file app\struct_code.s
   Uses
      None
Comment: myCode unused
released 00000048

Symbol: released
   Definitions
      At line 129 in file app\struct_code.s
   Uses
      At line 101 in file app\struct_code.s
Comment: released used once
s_cnt 00000088

Symbol: s_cnt
   Definitions
      At line 177 in file app\struct_code.s
   Uses
      At line 180 in file app\struct_code.s
      At line 182 in file app\struct_code.s

write_bit_ascii 000000BC

Symbol: write_bit_ascii
   Definitions
      At line 210 in file app\struct_code.s
   Uses
      At line 163 in file app\struct_code.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: write_bit_ascii used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 29 in file app\struct_code.s
   Uses
      At line 104 in file app\struct_code.s
      At line 144 in file app\struct_code.s
      At line 167 in file app\struct_code.s

ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 25 in file app\struct_code.s
   Uses
      At line 95 in file app\struct_code.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 24 in file app\struct_code.s
   Uses
      At line 131 in file app\struct_code.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_ASCII 60000300

Symbol: ADDR_LCD_ASCII
   Definitions
      At line 31 in file app\struct_code.s
   Uses
      At line 161 in file app\struct_code.s
      At line 200 in file app\struct_code.s

ADDR_LCD_ASCII_2ND_LINE 60000314

Symbol: ADDR_LCD_ASCII_2ND_LINE
   Definitions
      At line 33 in file app\struct_code.s
   Uses
      At line 188 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_2ND_LINE used once
ADDR_LCD_ASCII_BIT_POS 60000302

Symbol: ADDR_LCD_ASCII_BIT_POS
   Definitions
      At line 32 in file app\struct_code.s
   Uses
      At line 212 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_BIT_POS used once
ADDR_LCD_COLOUR 60000340

Symbol: ADDR_LCD_COLOUR
   Definitions
      At line 30 in file app\struct_code.s
   Uses
      At line 88 in file app\struct_code.s
      At line 108 in file app\struct_code.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 135 in file app\struct_code.s

ADDR_LED_31_0 60000100

Symbol: ADDR_LED_31_0
   Definitions
      At line 28 in file app\struct_code.s
   Uses
      At line 124 in file app\struct_code.s
Comment: ADDR_LED_31_0 used once
ASCII_DIGIT_CLEAR 00000000

Symbol: ASCII_DIGIT_CLEAR
   Definitions
      At line 40 in file app\struct_code.s
   Uses
      At line 202 in file app\struct_code.s
Comment: ASCII_DIGIT_CLEAR used once
ASCII_DIGIT_OFFSET 00000030

Symbol: ASCII_DIGIT_OFFSET
   Definitions
      At line 44 in file app\struct_code.s
   Uses
      None
Comment: ASCII_DIGIT_OFFSET unused
DISPLAY_COLOUR_BLUE 00000004

Symbol: DISPLAY_COLOUR_BLUE
   Definitions
      At line 49 in file app\struct_code.s
   Uses
      At line 92 in file app\struct_code.s
      At line 141 in file app\struct_code.s

DISPLAY_COLOUR_GREEN 00000002

Symbol: DISPLAY_COLOUR_GREEN
   Definitions
      At line 48 in file app\struct_code.s
   Uses
      At line 91 in file app\struct_code.s
      At line 110 in file app\struct_code.s

DISPLAY_COLOUR_RED 00000000

Symbol: DISPLAY_COLOUR_RED
   Definitions
      At line 47 in file app\struct_code.s
   Uses
      At line 90 in file app\struct_code.s
      At line 171 in file app\struct_code.s

LCD_LAST_OFFSET 00000028

Symbol: LCD_LAST_OFFSET
   Definitions
      At line 41 in file app\struct_code.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 205 in file app\struct_code.s
Comment: LCD_LAST_OFFSET used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

adc_get_value 00000000

Symbol: adc_get_value
   Definitions
      At line 73 in file app\struct_code.s
   Uses
      At line 85 in file app\struct_code.s
Comment: adc_get_value used once
adc_init 00000000

Symbol: adc_init
   Definitions
      At line 72 in file app\struct_code.s
   Uses
      At line 78 in file app\struct_code.s
Comment: adc_init used once
2 symbols
371 symbols in table
