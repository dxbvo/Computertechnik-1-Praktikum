


ARM Macro Assembler    Page 1 


    1 00000000         ;* -----------------------------------------------------
                       -------------
    2 00000000         ;* --  _____       ______  _____                        
                                   -
    3 00000000         ;* -- |_   _|     |  ____|/ ____|                       
                                   -
    4 00000000         ;* --   | |  _ __ | |__  | (___    Institute of Embedded
                        Systems    -
    5 00000000         ;* --   | | | '_ \|  __|  \___ \   Zurich University of 
                                   -
    6 00000000         ;* --  _| |_| | | | |____ ____) |  Applied Sciences     
                                   -
    7 00000000         ;* -- |_____|_| |_|______|_____/   8401 Winterthur, Swit
                       zerland     -
    8 00000000         ;* -----------------------------------------------------
                       -------------
    9 00000000         ;* --
   10 00000000         ;* -- Project     : CT1 - Lab 9
   11 00000000         ;* -- Description : Multiplication 16 bit unsigned
   12 00000000         ;* -- 
   13 00000000         ;* -- $Id: $
   14 00000000         ;* -----------------------------------------------------
                       -------------
   15 00000000         
   16 00000000         
   17 00000000 00000008 
                       NR_OF_TESTS
                               EQU              8
   18 00000000 00000001 
                       BITMASK_1
                               EQU              0x01
   19 00000000         ; ------------------------------------------------------
                       -------------
   20 00000000         ; -- Code
   21 00000000         ; ------------------------------------------------------
                       -------------
   22 00000000                 AREA             myCode, CODE, READONLY
   23 00000000                 THUMB
   24 00000000         
   25 00000000         mul_s16 PROC
   26 00000000                 EXPORT           mul_s16
   27 00000000                 IMPORT           display_title
   28 00000000                 IMPORT           tests_16x16
   29 00000000         
   30 00000000 B50E            PUSH             {R1-R3,LR}
   31 00000002         
   32 00000002 4810            LDR              R0,=title
   33 00000004 F7FF FFFE       BL               display_title
   34 00000008         
   35 00000008 4B0F            LDR              R3,=result_table
   36 0000000A 4A10            LDR              R2,=values
   37 0000000C 4910            LDR              R1,=NR_OF_TESTS
   38 0000000E 4811            LDR              R0,=operation
   39 00000010 F7FF FFFE       BL               tests_16x16
   40 00000014         
   41 00000014 BD0E            POP              {R1-R3,PC}
   42 00000016                 ENDP
   43 00000016         
   44 00000016         ; ------------------------------------------------------



ARM Macro Assembler    Page 2 


                       -------------
   45 00000016         ; 16 bit multiplication
   46 00000016         ; - multiplier in R0
   47 00000016         ; - multiplicand in R1
   48 00000016         ; - 32 bit result in R0
   49 00000016         ; ------------------------------------------------------
                       -------------
   50 00000016         operation
                               PROC
   51 00000016 B5F0            PUSH             {R4-R7,LR}
   52 00000018         
   53 00000018         ; Instruction: do not use high registers in your code, 
   54 00000018         ; or make sure they contain thier original values
   55 00000018         ; when the function returns
   56 00000018         
   57 00000018         ; STUDENTS: To be programmed  
   58 00000018         
   59 00000018 B200            SXTH             R0, R0      ; extends OP1 to si
                                                            gned
   60 0000001A B209            SXTH             R1, R1      ; extends OP2 to si
                                                            gned
   61 0000001C         
   62 0000001C 4A0E            LDR              R2, =0      ; loopcounter R2 to
                                                             zero
   63 0000001E 4C0E            LDR              R4, =0      ; temp. result
   64 00000020 4E0E            LDR              R6, =BITMASK_1
   65 00000022         
   66 00000022 0003            MOVS             R3, R0
   67 00000024         
   68 00000024         while
   69 00000024 2B00            CMP              R3, #0      ; Compare R3 with z
                                                            ero
   70 00000026 D00A            BEQ              endWhile
   71 00000028         
   72 00000028         ; Mask
   73 00000028 001D            MOVS             R5, R3
   74 0000002A 4035            ANDS             R5, R5, R6  ; filtering last bi
                                                            t
   75 0000002C         
   76 0000002C 2D00            CMP              R5, #0      ; checks last bit
   77 0000002E D002            BEQ              end_if      ; if last bit = 0 t
                                                            han end_if
   78 00000030         
   79 00000030 000F            MOVS             R7, R1
   80 00000032 4097            LSLS             R7, R7, R2  ; shift operand 2 e
                                                            ver loop
   81 00000034 19E4            ADDS             R4, R4, R7  ; adds operand 2 ev
                                                            ery loop
   82 00000036         end_if
   83 00000036 4F09            LDR              R7, =1
   84 00000038 19D2            ADDS             R2, R2, R7  ; R2 counts +1 ever
                                                            y loop
   85 0000003A 085B            LSRS             R3, R3, #1
   86 0000003C E7F2            B                while
   87 0000003E         
   88 0000003E         endWhile
   89 0000003E 0020            MOVS             R0, R4      ; result to R0
   90 00000040         
   91 00000040         ; END: To be programmed



ARM Macro Assembler    Page 3 


   92 00000040         
   93 00000040 BDF0            POP              {R4-R7,PC}  ; return R0
   94 00000042                 ENDP
   95 00000042         
   96 00000042 00 00           ALIGN
   97 00000044         
   98 00000044         ; ------------------------------------------------------
                       -------------
   99 00000044         ; -- Constants
  100 00000044         ; ------------------------------------------------------
                       -------------
  101 00000044 00000000 
              00000000 
              00000000 
              00000008 
              00000000 
              00000000 
              00000001         AREA             myConstants, DATA, READONLY
  102 00000000         
  103 00000000 01 00   values  DCW              0x0001
  104 00000002 FF FF           DCW              0xffff
  105 00000004 FFFFFFFF        DCD              0xffffffff
  106 00000008         
  107 00000008 17 00           DCW              0x0017
  108 0000000A 4A 00           DCW              0x004a
  109 0000000C 000006A6        DCD              0x000006a6
  110 00000010         
  111 00000010 FF FF           DCW              0xffff
  112 00000012 FF FF           DCW              0xffff
  113 00000014 00000001        DCD              0x00000001
  114 00000018         
  115 00000018 A4 73           DCW              0x73a4
  116 0000001A 28 4C           DCW              0x4c28
  117 0000001C 2266C1A0        DCD              0x2266c1a0
  118 00000020         
  119 00000020 CC 43           DCW              0x43cc
  120 00000022 BF C3           DCW              0xc3bf
  121 00000024 F00AF934        DCD              0xf00af934
  122 00000028         
  123 00000028 72 E3           DCW              0xe372
  124 0000002A 34 02           DCW              0x0234
  125 0000002C FFC11728        DCD              0xffc11728
  126 00000030         
  127 00000030 22 DD           DCW              0xdd22
  128 00000032 DE BC           DCW              0xbcde
  129 00000034 0924BB7C        DCD              0x0924bb7c
  130 00000038         
  131 00000038 FF 7F           DCW              0x7fff
  132 0000003A FF 7F           DCW              0x7fff
  133 0000003C 3FFF0001        DCD              0x3fff0001
  134 00000040         
  135 00000040 6D 75 6C 
              5F 73 31 
              36 00    title   DCB              "mul_s16", 0
  136 00000048         
  137 00000048                 ALIGN
  138 00000048         
  139 00000048         ; ------------------------------------------------------
                       -------------



ARM Macro Assembler    Page 4 


  140 00000048         ; -- Variables
  141 00000048         ; ------------------------------------------------------
                       -------------
  142 00000048                 AREA             myVars, DATA, READWRITE
  143 00000000         
  144 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    result_table
                               SPACE            NR_OF_TESTS*4
  145 00000020         
  146 00000020                 ALIGN
  147 00000020         
  148 00000020         ; ------------------------------------------------------
                       -------------
  149 00000020         ; -- End of file
  150 00000020         ; ------------------------------------------------------
                       -------------                      
  151 00000020                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\mul_s16.d -o.\build\mul_s16.o -I.\RTE\_Target_1 -IC:\Users\claud\AppData\Lo
cal\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\claud\AppData\
Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\claud\App
Data\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA 1" --pr
edefine="_RTE_ SETA 1" --list=.\build\mul_s16.lst app\mul_s16.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

endWhile 0000003E

Symbol: endWhile
   Definitions
      At line 88 in file app\mul_s16.s
   Uses
      At line 70 in file app\mul_s16.s
Comment: endWhile used once
end_if 00000036

Symbol: end_if
   Definitions
      At line 82 in file app\mul_s16.s
   Uses
      At line 77 in file app\mul_s16.s
Comment: end_if used once
mul_s16 00000000

Symbol: mul_s16
   Definitions
      At line 25 in file app\mul_s16.s
   Uses
      At line 26 in file app\mul_s16.s
Comment: mul_s16 used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 22 in file app\mul_s16.s
   Uses
      None
Comment: myCode unused
operation 00000016

Symbol: operation
   Definitions
      At line 50 in file app\mul_s16.s
   Uses
      At line 38 in file app\mul_s16.s
Comment: operation used once
while 00000024

Symbol: while
   Definitions
      At line 68 in file app\mul_s16.s
   Uses
      At line 86 in file app\mul_s16.s
Comment: while used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myConstants 00000000

Symbol: myConstants
   Definitions
      At line 101 in file app\mul_s16.s
   Uses
      None
Comment: myConstants unused
title 00000040

Symbol: title
   Definitions
      At line 135 in file app\mul_s16.s
   Uses
      At line 32 in file app\mul_s16.s
Comment: title used once
values 00000000

Symbol: values
   Definitions
      At line 103 in file app\mul_s16.s
   Uses
      At line 36 in file app\mul_s16.s
Comment: values used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

myVars 00000000

Symbol: myVars
   Definitions
      At line 142 in file app\mul_s16.s
   Uses
      None
Comment: myVars unused
result_table 00000000

Symbol: result_table
   Definitions
      At line 144 in file app\mul_s16.s
   Uses
      At line 35 in file app\mul_s16.s
Comment: result_table used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BITMASK_1 00000001

Symbol: BITMASK_1
   Definitions
      At line 18 in file app\mul_s16.s
   Uses
      At line 64 in file app\mul_s16.s
Comment: BITMASK_1 used once
NR_OF_TESTS 00000008

Symbol: NR_OF_TESTS
   Definitions
      At line 17 in file app\mul_s16.s
   Uses
      At line 37 in file app\mul_s16.s
      At line 144 in file app\mul_s16.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

display_title 00000000

Symbol: display_title
   Definitions
      At line 27 in file app\mul_s16.s
   Uses
      At line 33 in file app\mul_s16.s
Comment: display_title used once
tests_16x16 00000000

Symbol: tests_16x16
   Definitions
      At line 28 in file app\mul_s16.s
   Uses
      At line 39 in file app\mul_s16.s
Comment: tests_16x16 used once
2 symbols
350 symbols in table
