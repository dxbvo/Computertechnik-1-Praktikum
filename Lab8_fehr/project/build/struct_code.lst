


ARM Macro Assembler    Page 1 


    1 00000000         ; ------------------------------------------------------
                       ------------
    2 00000000         ; --  _____       ______  _____                         
                                  -
    3 00000000         ; -- |_   _|     |  ____|/ ____|                        
                                  -
    4 00000000         ; --   | |  _ __ | |__  | (___    Institute of Embedded 
                       Systems    -
    5 00000000         ; --   | | | '_ \|  __|  \___ \   Zurich University of  
                                  -
    6 00000000         ; --  _| |_| | | | |____ ____) |  Applied Sciences      
                                  -
    7 00000000         ; -- |_____|_| |_|______|_____/   8401 Winterthur, Switz
                       erland     -
    8 00000000         ; ------------------------------------------------------
                       ------------
    9 00000000         ; --
   10 00000000         ; -- main.s
   11 00000000         ; --
   12 00000000         ; -- CT1 P08 "Strukturierte Codierung" mit Assembler
   13 00000000         ; --
   14 00000000         ; -- $Id: struct_code.s 3787 2016-11-17 09:41:48Z kesr $
                       
   15 00000000         ; ------------------------------------------------------
                       ------------
   16 00000000         ;Directives
   17 00000000                 PRESERVE8
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       ------------
   21 00000000         ; -- Address-Defines
   22 00000000         ; ------------------------------------------------------
                       ------------
   23 00000000         ; input
   24 00000000 60000200 
                       ADDR_DIP_SWITCH_7_0
                               EQU              0x60000200
   25 00000000 60000210 
                       ADDR_BUTTONS
                               EQU              0x60000210
   26 00000000         
   27 00000000         ; output
   28 00000000 60000100 
                       ADDR_LED_31_0
                               EQU              0x60000100
   29 00000000 60000114 
                       ADDR_7_SEG_BIN_DS3_0
                               EQU              0x60000114
   30 00000000 60000340 
                       ADDR_LCD_COLOUR
                               EQU              0x60000340
   31 00000000 60000300 
                       ADDR_LCD_ASCII
                               EQU              0x60000300
   32 00000000 60000302 
                       ADDR_LCD_ASCII_BIT_POS
                               EQU              0x60000302
   33 00000000 60000314 



ARM Macro Assembler    Page 2 


                       ADDR_LCD_ASCII_2ND_LINE
                               EQU              0x60000314
   34 00000000         
   35 00000000         
   36 00000000         ; ------------------------------------------------------
                       ------------
   37 00000000         ; -- Program-Defines
   38 00000000         ; ------------------------------------------------------
                       ------------
   39 00000000         ; value for clearing lcd
   40 00000000 00000000 
                       ASCII_DIGIT_CLEAR
                               EQU              0x00000000
   41 00000000 00000028 
                       LCD_LAST_OFFSET
                               EQU              0x00000028
   42 00000000         
   43 00000000         ; offset for showing the digit in the lcd
   44 00000000 00000030 
                       ASCII_DIGIT_OFFSET
                               EQU              0x00000030
   45 00000000         
   46 00000000         ; lcd background colors to be written
   47 00000000 00000000 
                       DISPLAY_COLOUR_RED
                               EQU              0
   48 00000000 00000002 
                       DISPLAY_COLOUR_GREEN
                               EQU              2
   49 00000000 00000004 
                       DISPLAY_COLOUR_BLUE
                               EQU              4
   50 00000000         
   51 00000000         ; ------------------------------------------------------
                       ------------
   52 00000000         ; -- myConstants
   53 00000000         ; ------------------------------------------------------
                       ------------
   54 00000000                 AREA             myConstants, DATA, READONLY
   55 00000000         ; display defines for hex / dec
   56 00000000 42 69 74 
              20       DISPLAY_BIT
                               DCB              "Bit "
   57 00000004 32      DISPLAY_2_BIT
                               DCB              "2"
   58 00000005 34      DISPLAY_4_BIT
                               DCB              "4"
   59 00000006 38      DISPLAY_8_BIT
                               DCB              "8"
   60 00000007 30 31 32 
              33 34 35 
              36 37 38 DISPLAY_ARR_BIT
                               DCB              "012345678"
   61 00000010                 ALIGN
   62 00000010         
   63 00000010         ; ------------------------------------------------------
                       ------------
   64 00000010         ; -- myCode
   65 00000010         ; ------------------------------------------------------



ARM Macro Assembler    Page 3 


                       ------------
   66 00000010                 AREA             myCode, CODE, READONLY
   67 00000000                 ENTRY
   68 00000000         
   69 00000000         ; imports for calls
   70 00000000                 import           adc_init
   71 00000000                 import           adc_get_value
   72 00000000         
   73 00000000         main    PROC
   74 00000000                 export           main
   75 00000000         ; 8 bit resolution, cont. sampling
   76 00000000 F7FF FFFE       BL               adc_init
   77 00000004 F000 F844       BL               clear_lcd
   78 00000008         
   79 00000008         main_loop
   80 00000008         ; STUDENTS: To be programmed
   81 00000008         
   82 00000008         ;load ADC value
   83 00000008 F7FF FFFE       BL               adc_get_value
   84 0000000C         
   85 0000000C         ;reset LCD every loop
   86 0000000C         ;BL clear_lcd
   87 0000000C         
   88 0000000C         ;reset LCD every Loop
   89 0000000C 4B29            LDR              R3, =ADDR_LCD_COLOUR
   90 0000000E 4A2A            LDR              R2, =0x0000
   91 00000010 801A            STRH             R2, [R3, #DISPLAY_COLOUR_RED]
   92 00000012 805A            STRH             R2, [R3, #DISPLAY_COLOUR_GREEN]
   93 00000014 809A            STRH             R2, [R3, #DISPLAY_COLOUR_BLUE]
   94 00000016         
   95 00000016         ;check if Button T0 is pressed
   96 00000016 4929            LDR              R1, =ADDR_BUTTONS
   97 00000018 6809            LDR              R1, [R1]
   98 0000001A 2201            MOVS             R2, #0x01
   99 0000001C 4011            ANDS             R1,R2
  100 0000001E         
  101 0000001E         ;if NOT pressed
  102 0000001E D00F            BEQ              released
  103 00000020         ;set color to green
  104 00000020 4B24            LDR              R3, =ADDR_LCD_COLOUR
  105 00000022 4C27            LDR              R4, =0xFFFF ;max brightness
  106 00000024 805C            STRH             R4, [R3, #DISPLAY_COLOUR_GREEN]
  107 00000026 0001            MOVS             R1, R0
  108 00000028         ;Aufgabe 3b
  109 00000028 08C2            LSRS             R2, R0, #3  ;divide by 8
  110 0000002A 3201            ADDS             R2, #1
  111 0000002C 2300            MOVS             R3, #0      ;bar counter variab
                                                            le
  112 0000002E 2500            MOVS             R5, #0      ;loop counter varia
                                                            ble
  113 00000030 006D    cnt     LSLS             R5, #1
  114 00000032 3501            ADDS             R5, #1
  115 00000034 3301            ADDS             R3, #1
  116 00000036 429A            CMP              R2, R3
  117 00000038 D8FA            BHI              cnt
  118 0000003A         
  119 0000003A         ;display the bar
  120 0000003A 4C22            LDR              R4, =ADDR_LED_31_0
  121 0000003C 6025            STR              R5, [R4]



ARM Macro Assembler    Page 4 


  122 0000003E         
  123 0000003E E024            B                finished
  124 00000040         
  125 00000040         released
  126 00000040         ;read Dip switch 0-7
  127 00000040 4921            LDR              R1, =ADDR_DIP_SWITCH_7_0
  128 00000042 7809            LDRB             R1, [R1]
  129 00000044         
  130 00000044         ;if Diff < 0
  131 00000044         ;set color to RED
  132 00000044 4B1B            LDR              R3, =ADDR_LCD_COLOUR
  133 00000046 4C1E            LDR              R4, =0xFFFF
  134 00000048 000A            MOVS             R2, R1      ;copy of R1
  135 0000004A 1A09            SUBS             R1, R1, R0  ;DIP - ADC
  136 0000004C D40F            BMI              less
  137 0000004E         ;set color to blue
  138 0000004E 809C            STRH             R4, [R3, #DISPLAY_COLOUR_BLUE]
  139 00000050         
  140 00000050         ;Aufgabe 3c
  141 00000050 2910            CMP              R1, #16
  142 00000052 DA03            BGE              Bits_8
  143 00000054 2904            CMP              R1, #4
  144 00000056 DA03            BGE              Bits_4
  145 00000058 4D1C            LDR              R5, =DISPLAY_2_BIT
  146 0000005A E002            B                display
  147 0000005C         Bits_8
  148 0000005C 4D1C            LDR              R5, =DISPLAY_8_BIT
  149 0000005E E000            B                display
  150 00000060         Bits_4
  151 00000060 4D1C            LDR              R5, =DISPLAY_4_BIT
  152 00000062 782D    display LDRB             R5, [R5]
  153 00000064 4E1C            LDR              R6, =ADDR_LCD_ASCII
  154 00000066 6035            STR              R5, [R6]
  155 00000068 F000 F81D       BL               write_bit_ascii ;display "Bit" 
                                                            on LCD
  156 0000006C E00D            B                finished
  157 0000006E         
  158 0000006E         less                                 ;set color to red
  159 0000006E 801C            STRH             R4, [R3, #DISPLAY_COLOUR_RED]
  160 00000070         ;Aufgabe 3d
  161 00000070 2000            MOVS             R0, #0      ;counter variable
  162 00000072         ;MOVS R3, #0  ;for carry operation
  163 00000072 1E13    s_cnt   SUBS             R3, R2, #0
  164 00000074 D003            BEQ              end_cnt     ;if 0
  165 00000076 0852            LSRS             R2, #1      ;left shift 1
  166 00000078 D3FB            BCC              s_cnt       ;if carry == 0 add 
                                                            1 to counter
  167 0000007A 3001            ADDS             R0, #1
  168 0000007C         ;SBCS R0, R0, R1 
  169 0000007C E7F9            B                s_cnt
  170 0000007E         end_cnt
  171 0000007E 2108            MOVS             R1, #8
  172 00000080 1A08            SUBS             R0, R1, R0
  173 00000082 4E16            LDR              R6, =ADDR_LCD_ASCII_2ND_LINE
  174 00000084 4D16            LDR              R5, =DISPLAY_ARR_BIT
  175 00000086 582C            LDR              R4, [R5, R0]
  176 00000088         
  177 00000088 7034            STRB             R4 , [R6]
  178 0000008A         



ARM Macro Assembler    Page 5 


  179 0000008A         
  180 0000008A         
  181 0000008A         finished
  182 0000008A         ;display ADC value to 7SEG
  183 0000008A 4A16            LDR              R2, =ADDR_7_SEG_BIN_DS3_0
  184 0000008C 6011            STR              R1, [R2]
  185 0000008E         
  186 0000008E         
  187 0000008E         ; END: To be programmed
  188 0000008E E7BB            B                main_loop
  189 00000090         
  190 00000090         clear_lcd
  191 00000090 B407            PUSH             {R0, R1, R2}
  192 00000092 4A09            LDR              R2, =0x0
  193 00000094         clear_lcd_loop
  194 00000094 4810            LDR              R0, =ADDR_LCD_ASCII
  195 00000096 1880            ADDS             R0, R0, R2  ; add index to lcd 
                                                            offset
  196 00000098 4907            LDR              R1, =ASCII_DIGIT_CLEAR
  197 0000009A 6001            STR              R1, [R0]
  198 0000009C 1D12            ADDS             R2, R2, #4  ; increas index by 
                                                            4 (word step)
  199 0000009E 2A28            CMP              R2, #LCD_LAST_OFFSET ; until in
                                                            dex reached last lc
                                                            d point
  200 000000A0 D4F8            BMI              clear_lcd_loop
  201 000000A2 BC07            POP              {R0, R1, R2}
  202 000000A4 4770            BX               LR
  203 000000A6         
  204 000000A6         write_bit_ascii
  205 000000A6 B403            PUSH             {R0, R1}
  206 000000A8 480F            LDR              R0, =ADDR_LCD_ASCII_BIT_POS
  207 000000AA 4910            LDR              R1, =DISPLAY_BIT
  208 000000AC 6809            LDR              R1, [R1]
  209 000000AE 6001            STR              R1, [R0]
  210 000000B0 BC03            POP              {R0, R1}
  211 000000B2 4770            BX               LR
  212 000000B4         
  213 000000B4                 ENDP
  214 000000B4                 ALIGN
  215 000000B4         
  216 000000B4         
  217 000000B4         ; ------------------------------------------------------
                       ------------
  218 000000B4         ; End of code
  219 000000B4         ; ------------------------------------------------------
                       ------------
  220 000000B4                 END
              60000340 
              00000000 
              60000210 
              0000FFFF 
              60000100 
              60000200 
              00000000 
              00000000 
              00000000 
              60000300 
              60000314 



ARM Macro Assembler    Page 6 


              00000000 
              60000114 
              60000302 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --depend=.\bu
ild\struct_code.d -o.\build\struct_code.o -I.\RTE\_Target_1 -IC:\Users\weyti\Ap
pData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include -IC:\Users\weyti\
AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\Device\Include\m0 -IC:\Users\w
eyti\AppData\Local\Arm\Packs\InES\CTBoard14_DFP\4.0.2\HAL\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA
 1" --predefine="_RTE_ SETA 1" --list=.\build\struct_code.lst app\struct_code.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DISPLAY_2_BIT 00000004

Symbol: DISPLAY_2_BIT
   Definitions
      At line 57 in file app\struct_code.s
   Uses
      At line 145 in file app\struct_code.s
Comment: DISPLAY_2_BIT used once
DISPLAY_4_BIT 00000005

Symbol: DISPLAY_4_BIT
   Definitions
      At line 58 in file app\struct_code.s
   Uses
      At line 151 in file app\struct_code.s
Comment: DISPLAY_4_BIT used once
DISPLAY_8_BIT 00000006

Symbol: DISPLAY_8_BIT
   Definitions
      At line 59 in file app\struct_code.s
   Uses
      At line 148 in file app\struct_code.s
Comment: DISPLAY_8_BIT used once
DISPLAY_ARR_BIT 00000007

Symbol: DISPLAY_ARR_BIT
   Definitions
      At line 60 in file app\struct_code.s
   Uses
      At line 174 in file app\struct_code.s
Comment: DISPLAY_ARR_BIT used once
DISPLAY_BIT 00000000

Symbol: DISPLAY_BIT
   Definitions
      At line 56 in file app\struct_code.s
   Uses
      At line 207 in file app\struct_code.s
Comment: DISPLAY_BIT used once
myConstants 00000000

Symbol: myConstants
   Definitions
      At line 54 in file app\struct_code.s
   Uses
      None
Comment: myConstants unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Bits_4 00000060

Symbol: Bits_4
   Definitions
      At line 150 in file app\struct_code.s
   Uses
      At line 144 in file app\struct_code.s
Comment: Bits_4 used once
Bits_8 0000005C

Symbol: Bits_8
   Definitions
      At line 147 in file app\struct_code.s
   Uses
      At line 142 in file app\struct_code.s
Comment: Bits_8 used once
clear_lcd 00000090

Symbol: clear_lcd
   Definitions
      At line 190 in file app\struct_code.s
   Uses
      At line 77 in file app\struct_code.s
Comment: clear_lcd used once
clear_lcd_loop 00000094

Symbol: clear_lcd_loop
   Definitions
      At line 193 in file app\struct_code.s
   Uses
      At line 200 in file app\struct_code.s
Comment: clear_lcd_loop used once
cnt 00000030

Symbol: cnt
   Definitions
      At line 113 in file app\struct_code.s
   Uses
      At line 117 in file app\struct_code.s
Comment: cnt used once
display 00000062

Symbol: display
   Definitions
      At line 152 in file app\struct_code.s
   Uses
      At line 146 in file app\struct_code.s
      At line 149 in file app\struct_code.s

end_cnt 0000007E

Symbol: end_cnt
   Definitions
      At line 170 in file app\struct_code.s
   Uses
      At line 164 in file app\struct_code.s
Comment: end_cnt used once
finished 0000008A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: finished
   Definitions
      At line 181 in file app\struct_code.s
   Uses
      At line 123 in file app\struct_code.s
      At line 156 in file app\struct_code.s

less 0000006E

Symbol: less
   Definitions
      At line 158 in file app\struct_code.s
   Uses
      At line 136 in file app\struct_code.s
Comment: less used once
main 00000000

Symbol: main
   Definitions
      At line 73 in file app\struct_code.s
   Uses
      At line 74 in file app\struct_code.s
Comment: main used once
main_loop 00000008

Symbol: main_loop
   Definitions
      At line 79 in file app\struct_code.s
   Uses
      At line 188 in file app\struct_code.s
Comment: main_loop used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 66 in file app\struct_code.s
   Uses
      None
Comment: myCode unused
released 00000040

Symbol: released
   Definitions
      At line 125 in file app\struct_code.s
   Uses
      At line 102 in file app\struct_code.s
Comment: released used once
s_cnt 00000072

Symbol: s_cnt
   Definitions
      At line 163 in file app\struct_code.s
   Uses
      At line 166 in file app\struct_code.s
      At line 169 in file app\struct_code.s

write_bit_ascii 000000A6

Symbol: write_bit_ascii



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 204 in file app\struct_code.s
   Uses
      At line 155 in file app\struct_code.s
Comment: write_bit_ascii used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDR_7_SEG_BIN_DS3_0 60000114

Symbol: ADDR_7_SEG_BIN_DS3_0
   Definitions
      At line 29 in file app\struct_code.s
   Uses
      At line 183 in file app\struct_code.s
Comment: ADDR_7_SEG_BIN_DS3_0 used once
ADDR_BUTTONS 60000210

Symbol: ADDR_BUTTONS
   Definitions
      At line 25 in file app\struct_code.s
   Uses
      At line 96 in file app\struct_code.s
Comment: ADDR_BUTTONS used once
ADDR_DIP_SWITCH_7_0 60000200

Symbol: ADDR_DIP_SWITCH_7_0
   Definitions
      At line 24 in file app\struct_code.s
   Uses
      At line 127 in file app\struct_code.s
Comment: ADDR_DIP_SWITCH_7_0 used once
ADDR_LCD_ASCII 60000300

Symbol: ADDR_LCD_ASCII
   Definitions
      At line 31 in file app\struct_code.s
   Uses
      At line 153 in file app\struct_code.s
      At line 194 in file app\struct_code.s

ADDR_LCD_ASCII_2ND_LINE 60000314

Symbol: ADDR_LCD_ASCII_2ND_LINE
   Definitions
      At line 33 in file app\struct_code.s
   Uses
      At line 173 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_2ND_LINE used once
ADDR_LCD_ASCII_BIT_POS 60000302

Symbol: ADDR_LCD_ASCII_BIT_POS
   Definitions
      At line 32 in file app\struct_code.s
   Uses
      At line 206 in file app\struct_code.s
Comment: ADDR_LCD_ASCII_BIT_POS used once
ADDR_LCD_COLOUR 60000340

Symbol: ADDR_LCD_COLOUR
   Definitions
      At line 30 in file app\struct_code.s
   Uses
      At line 89 in file app\struct_code.s
      At line 104 in file app\struct_code.s
      At line 132 in file app\struct_code.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

ADDR_LED_31_0 60000100

Symbol: ADDR_LED_31_0
   Definitions
      At line 28 in file app\struct_code.s
   Uses
      At line 120 in file app\struct_code.s
Comment: ADDR_LED_31_0 used once
ASCII_DIGIT_CLEAR 00000000

Symbol: ASCII_DIGIT_CLEAR
   Definitions
      At line 40 in file app\struct_code.s
   Uses
      At line 196 in file app\struct_code.s
Comment: ASCII_DIGIT_CLEAR used once
ASCII_DIGIT_OFFSET 00000030

Symbol: ASCII_DIGIT_OFFSET
   Definitions
      At line 44 in file app\struct_code.s
   Uses
      None
Comment: ASCII_DIGIT_OFFSET unused
DISPLAY_COLOUR_BLUE 00000004

Symbol: DISPLAY_COLOUR_BLUE
   Definitions
      At line 49 in file app\struct_code.s
   Uses
      At line 93 in file app\struct_code.s
      At line 138 in file app\struct_code.s

DISPLAY_COLOUR_GREEN 00000002

Symbol: DISPLAY_COLOUR_GREEN
   Definitions
      At line 48 in file app\struct_code.s
   Uses
      At line 92 in file app\struct_code.s
      At line 106 in file app\struct_code.s

DISPLAY_COLOUR_RED 00000000

Symbol: DISPLAY_COLOUR_RED
   Definitions
      At line 47 in file app\struct_code.s
   Uses
      At line 91 in file app\struct_code.s
      At line 159 in file app\struct_code.s

LCD_LAST_OFFSET 00000028

Symbol: LCD_LAST_OFFSET
   Definitions
      At line 41 in file app\struct_code.s
   Uses
      At line 199 in file app\struct_code.s
Comment: LCD_LAST_OFFSET used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

adc_get_value 00000000

Symbol: adc_get_value
   Definitions
      At line 71 in file app\struct_code.s
   Uses
      At line 83 in file app\struct_code.s
Comment: adc_get_value used once
adc_init 00000000

Symbol: adc_init
   Definitions
      At line 70 in file app\struct_code.s
   Uses
      At line 76 in file app\struct_code.s
Comment: adc_init used once
2 symbols
372 symbols in table
